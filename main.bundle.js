/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/Arbitrage.json":
/*!*******************************!*\
  !*** ./assets/Arbitrage.json ***!
  \*******************************/
/*! exports provided: contractName, abi, bytecode, deployedBytecode, sourceMap, deployedSourceMap, source, sourcePath, ast, legacyAST, compiler, networks, schemaVersion, updatedAt, devdoc, userdoc, default */
/***/ (function(module) {

module.exports = {"contractName":"Arbitrage","abi":[{"constant":true,"inputs":[],"name":"active","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"arbitrators","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"disputesCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_arbitrators","type":"address[]"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"disputeId","type":"uint256"},{"indexed":true,"name":"arbitrable","type":"address"},{"indexed":false,"name":"claimant","type":"address"},{"indexed":false,"name":"defendant","type":"address"},{"indexed":false,"name":"reasonHash","type":"bytes32"}],"name":"DisputeRaised","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"disputeId","type":"uint256"},{"indexed":false,"name":"author","type":"address"}],"name":"DisputeClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"disputeId","type":"uint256"},{"indexed":false,"name":"author","type":"address"},{"indexed":false,"name":"resolutionHash","type":"bytes32"}],"name":"DisputeResolutionSuggested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"disputeId","type":"uint256"},{"indexed":false,"name":"author","type":"address"},{"indexed":false,"name":"resolutionHash","type":"bytes32"}],"name":"DisputeResolved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"disputeId","type":"uint256"},{"indexed":false,"name":"author","type":"address"}],"name":"DisputeInterrupted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"disputeId","type":"uint256"},{"indexed":false,"name":"author","type":"address"}],"name":"DisputeResumed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"reason","type":"bytes"}],"name":"Repudiated","type":"event"},{"constant":true,"inputs":[{"name":"_disputeId","type":"uint256"}],"name":"disputeClaimant","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_disputeId","type":"uint256"}],"name":"disputeArbitrable","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_disputeId","type":"uint256"}],"name":"disputeDefendant","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_disputeId","type":"uint256"}],"name":"disputeRaisedAt","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_disputeId","type":"uint256"}],"name":"disputeResolutionHash","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_disputeId","type":"uint256"}],"name":"disputeStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_arbitrators","type":"address[]"}],"name":"addArbitrators","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_arbitrators","type":"address[]"}],"name":"removeArbitrators","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"repudiate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_arbitrable","type":"address"},{"name":"_defendant","type":"address"},{"name":"_reasonHash","type":"bytes32"},{"name":"_resolutionHash","type":"bytes32"}],"name":"raiseDispute","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_disputeId","type":"uint256"}],"name":"closeDispute","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_disputeId","type":"uint256"},{"name":"_resolutionHash","type":"bytes32"}],"name":"suggestDisputeResolution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_disputeId","type":"uint256"},{"name":"_resolution","type":"bytes"}],"name":"resolveDispute","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061013e576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100ca578063c302c2961161008e578063c302c29614610483578063cd4ca3c8146104a0578063cf83c631146104bd578063f257aa57146104f9578063f2fde38b146105165761013e565b8063715018a6146103ab57806372e7fe44146103b35780638024e5c7146104565780638da5cb5b146104735780638dbf75571461047b5761013e565b806319ef15911161011157806319ef1591146101fe578063318f021d146102a15780634471fabc146102be57806351d0ea371461036b5780635b28f0e7146103915761013e565b806302fb0c5e146101435780630924593f1461015f57806310f169e814610198578063115d561e146101d9575b600080fd5b61014b61053c565b604080519115158252519081900360200190f35b61017c6004803603602081101561017557600080fd5b503561054c565b60408051600160a060020a039092168252519081900360200190f35b6101b5600480360360208110156101ae57600080fd5b503561056d565b604051808260028111156101c557fe5b60ff16815260200191505060405180910390f35b6101fc600480360360408110156101ef57600080fd5b508035906020013561059a565b005b6101fc6004803603602081101561021457600080fd5b81019060208101813564010000000081111561022f57600080fd5b82018360208201111561024157600080fd5b8035906020019184602083028401116401000000008311171561026357600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061072f945050505050565b61017c600480360360208110156102b757600080fd5b50356107da565b6101fc600480360360408110156102d457600080fd5b813591908101906040810160208201356401000000008111156102f657600080fd5b82018360208201111561030857600080fd5b8035906020019184600183028401116401000000008311171561032a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107f5945050505050565b61014b6004803603602081101561038157600080fd5b5035600160a060020a0316610b2e565b610399610b43565b60408051918252519081900360200190f35b6101fc610b49565b6101fc600480360360208110156103c957600080fd5b8101906020810181356401000000008111156103e457600080fd5b8201836020820111156103f657600080fd5b8035906020019184602083028401116401000000008311171561041857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610bec945050505050565b61017c6004803603602081101561046c57600080fd5b5035610c94565b61017c610cb3565b6101fc610cc2565b6103996004803603602081101561049957600080fd5b5035610d30565b610399600480360360208110156104b657600080fd5b5035610d45565b610399600480360360808110156104d357600080fd5b50600160a060020a03813581169160208101359091169060408101359060600135610d5a565b6101fc6004803603602081101561050f57600080fd5b5035610f16565b6101fc6004803603602081101561052c57600080fd5b5035600160a060020a0316611070565b60005460a060020a900460ff1681565b600081815260026020526040902060010154600160a060020a03165b919050565b600081815260026020526040812054600160a060020a03161561059257506000610568565b506001919050565b600054829060a060020a900460ff1615156105eb576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634152303102604482015290519081900360640190fd5b600081815260026020526040902054600160a060020a0316151561065b576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008381526002602052604090208054600160a060020a031633148061069057503360009081526001602052604090205460ff165b15156106e8576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303400000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600481018390556040805133815260208101859052815186927f3ec76169555eef02b3a670c8d94158f279e3b3d8ad1ef208e8d6befc30621445928290030190a250505050565b600054600160a060020a0316331461077d576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b60005460a060020a900460ff1615156107cc576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634152303102604482015290519081900360640190fd5b6107d78160016110c7565b50565b600090815260026020526040902054600160a060020a031690565b600054829060a060020a900460ff161515610846576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634152303102604482015290519081900360640190fd5b600081815260026020526040902054600160a060020a031615156108b6576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600083815260026020819052604090912090810154600160a060020a03163314806108f057503360009081526001602052604090205460ff165b1515610948576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303500000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6001810154600160a060020a0316158015906109675750600481015415155b15610ade57600481015483516020850120146109cf576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303600000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60018101546040518451600160a060020a03909216916000918391879190819060208401908083835b60208310610a175780518252601f1990920191602091820191016109f8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610a79576040519150601f19603f3d011682016040523d82523d6000602084013e610a7e565b606091505b50509050801515610adb576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303700000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50505b6004810154604080513381526020810192909252805186927f1cf4fb7a0897dc3f9a1229a1b0a6c5243e5147f0ac591661ff0538932c8c2eb592908290030190a2610b28846111a1565b50505050565b60016020526000908152604090205460ff1681565b60035481565b600054600160a060020a03163314610b97576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a03163314610c3a576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b60005460a060020a900460ff161515610c89576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634152303102604482015290519081900360640190fd5b6107d78160006110c7565b60009081526002602081905260409091200154600160a060020a031690565b600054600160a060020a031681565b600054600160a060020a03163314610d10576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b6000805474ff000000000000000000000000000000000000000019169055565b60009081526002602052604090206003015490565b60009081526002602052604090206004015490565b6000805460a060020a900460ff161515610daa576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634152303102604482015290519081900360640190fd5b600160a060020a0384161515610e0c576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610e146112f2565b506040805160a08101825233808252600160a060020a0388811660208085018281528a8416868801818152426060808a0191825260808a018d815260038054600190810180835560009081526002808b52908f90208e518154908e1673ffffffffffffffffffffffffffffffffffffffff1991821617825599519281018054938e16938b16939093179092559551958101805496909b1695909716949094179098559051848301559551600490930192909255905487519586529185015283860189905294519394909390927f33c81a3010e4c383da90c2b9d48e2b4e9d0d698b5bc6260e172f0d8fbdd3323292908290030190a35050600354949350505050565b600054819060a060020a900460ff161515610f67576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634152303102604482015290519081900360640190fd5b600081815260026020526040902054600160a060020a03161515610fd7576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600082815260026020526040902054600160a060020a031633148061100b57503360009081526001602052604090205460ff165b1515611063576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303400000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b61106c826111a1565b5050565b600054600160a060020a031633146110be576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b6107d781611228565b60005b825181101561119c5782516000908490839081106110e457fe5b60209081029091010151600160a060020a0316141561114f576040805160e560020a62461bcd028152602060048083019190915260248201527f4152303800000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b8160016000858481518110151561116257fe5b602090810291909101810151600160a060020a03168252810191909152604001600020805460ff19169115159190911790556001016110ca565b505050565b6000818152600260208181526040808420805473ffffffffffffffffffffffffffffffffffffffff199081168255600182018054821690559381018054909416909355600383018490556004909201929092558051338152905183927f52970ecd297080113b45897e3c7a04733b08e210b725868378ac7f627062e264928290030190a250565b600160a060020a038116151561128a576040805160e560020a62461bcd028152602060048083019190915260248201527f4f57303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091529056fea165627a7a723058206600e59e2a0839f395aa4e24e70c6a60473de58c624d94212023149d34abbdb50029","sourceMap":"1080:5086:2:-;;;1127:25;;;-1:-1:-1;;;;;;1127:25:2;;;;;1678:98;5:2:-1;;;;30:1;27;20:12;5:2;1678:98:2;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1678:98:2;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;;1184:5:3;:18;;-1:-1:-1;;;;;;1184:18:3;1192:10;1184:18;;;1678:98:2;-1:-1:-1;1734:37:2;;-1:-1:-1;1678:98:2;;-1:-1:-1;1184:18:3;1734:17:2;;;;:37;:::i;:::-;1678:98;1080:5086;;5714:254;5812:9;5807:157;5831:12;:19;5827:1;:23;5807:157;;;5873:15;;5900:1;;5873:12;;5886:1;;5873:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;5873:29:2;;;5865:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5950:7;5919:11;:28;5931:12;5944:1;5931:15;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5919:28:2;;;;;;;;;;;-1:-1:-1;5919:28:2;:38;;-1:-1:-1;;5919:38:2;;;;;;;;;;-1:-1:-1;5852:3:2;5807:157;;;;5714:254;;:::o;1080:5086::-;;;;;;;","deployedSourceMap":"1080:5086:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1080:5086:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;1994:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1994:134:2;;:::i;:::-;;;;-1:-1:-1;;;;;1994:134:2;;;;;;;;;;;;;;2710:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2710:220:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4364:389;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4364:389:2;;;;;;;:::i;:::-;;2974:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2974:137:2;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2974:137:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2974:137:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2974:137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2974:137:2;;-1:-1:-1;2974:137:2;;-1:-1:-1;;;;;2974:137:2:i;1819:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1819:130:2;;:::i;4794:756::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4794:756:2;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4794:756:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4794:756:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4794:756:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4794:756:2;;-1:-1:-1;4794:756:2;;-1:-1:-1;;;;;4794:756:2:i;1156:43::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1156:43:2;-1:-1:-1;;;;;1156:43:2;;:::i;1386:28::-;;;:::i;:::-;;;;;;;;;;;;;;;;1452:111:3;;;:::i;3158:141:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3158:141:2;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3158:141:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3158:141:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3158:141:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3158:141:2;;-1:-1:-1;3158:141:2;;-1:-1:-1;;;;;3158:141:2:i;2172:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2172:132:2;;:::i;855:20:3:-;;;:::i;3335:64:2:-;;;:::i;2348:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2348:130:2;;:::i;2528:142::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2528:142:2;;:::i;3439:596::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3439:596:2;;;;;;;;;;;;;;;;;;;;;;:::i;4077:234::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4077:234:2;;:::i;1725:103:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1725:103:3;-1:-1:-1;;;;;1725:103:3;;:::i;1127:25:2:-;;;-1:-1:-1;;;1127:25:2;;;;;:::o;1994:134::-;2068:7;2092:20;;;:8;:20;;;;;:31;;;-1:-1:-1;;;;;2092:31:2;1994:134;;;;:::o;2710:220::-;2778:13;2805:20;;;:8;:20;;;;;:29;-1:-1:-1;;;;;2805:29:2;:43;2801:91;;-1:-1:-1;2865:20:2;2858:27;;2801:91;-1:-1:-1;2904:20:2;2710:220;;;:::o;4364:389::-;1547:6;;4477:10;;-1:-1:-1;;;1547:6:2;;;;1539:23;;;;;;;-1:-1:-1;;;;;1539:23:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1539:23:2;;;;;;;;;;;;;;;1617:1;1576:20;;;:8;:20;;;;;:29;-1:-1:-1;;;;;1576:29:2;:43;;1568:60;;;;;-1:-1:-1;;;;;1568:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4497:23;4523:20;;;:8;:20;;;;;4557:16;;-1:-1:-1;;;;;4557:16:2;4577:10;4557:30;;:57;;-1:-1:-1;4603:10:2;4591:23;;;;:11;:23;;;;;;;;4557:57;4549:74;;;;;;;-1:-1:-1;;;;;4549:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4630:22;;;:40;;;4681:67;;;4720:10;4681:67;;;;;;;;;;4708:10;;4681:67;;;;;;;;1634:1;4364:389;;;:::o;2974:137::-;1336:5:3;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;1455:6:2;;-1:-1:-1;;;1455:6:2;;;;1447:23;;;;;;;-1:-1:-1;;;;;1447:23:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1447:23:2;;;;;;;;;;;;;;;3069:37;3087:12;3101:4;3069:17;:37::i;:::-;2974:137;:::o;1819:130::-;1891:7;1915:20;;;:8;:20;;;;;:29;-1:-1:-1;;;;;1915:29:2;;1819:130::o;4794:756::-;1547:6;;4893:10;;-1:-1:-1;;;1547:6:2;;;;1539:23;;;;;;;-1:-1:-1;;;;;1539:23:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1539:23:2;;;;;;;;;;;;;;;1617:1;1576:20;;;:8;:20;;;;;:29;-1:-1:-1;;;;;1576:29:2;:43;;1568:60;;;;;-1:-1:-1;;;;;1568:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4913:23;4939:20;;;:8;:20;;;;;;;;4980:17;;;;-1:-1:-1;;;;;4980:17:2;5001:10;4980:31;;:58;;-1:-1:-1;5027:10:2;5015:23;;;;:11;:23;;;;;;;;4980:58;4965:88;;;;;;;-1:-1:-1;;;;;4965:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5068:18;;;;-1:-1:-1;;;;;5068:18:2;:32;;;;:63;;-1:-1:-1;5104:22:2;;;;:27;;5068:63;5064:363;;;5175:22;;;;5149;;;;;;:48;5141:65;;;;;-1:-1:-1;;;;;5141:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5248:18;;;;5355:33;;;;-1:-1:-1;;;;;5248:18:2;;;;5214:23;;5248:18;;5376:11;;5355:33;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5355:33:2;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5337:51:2;;;5404:7;5396:24;;;;;;;-1:-1:-1;;;;;5396:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5064:363;;;5484:22;;;;5444:63;;;5472:10;5444:63;;;;;;;;;;;5460:10;;5444:63;;;;;;;;;5513:32;5534:10;5513:20;:32::i;:::-;1634:1;4794:756;;;:::o;1156:43::-;;;;;;;;;;;;;;;:::o;1386:28::-;;;;:::o;1452:111:3:-;1336:5;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;1528:5;;;1509:25;;-1:-1:-1;;;;;1528:5:3;;;;1509:25;;;1556:1;1540:18;;-1:-1:-1;;1540:18:3;;;1452:111::o;3158:141:2:-;1336:5:3;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;1455:6:2;;-1:-1:-1;;;1455:6:2;;;;1447:23;;;;;;;-1:-1:-1;;;;;1447:23:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1447:23:2;;;;;;;;;;;;;;;3256:38;3274:12;3288:5;3256:17;:38::i;2172:132::-;2245:7;2269:20;;;:8;:20;;;;;;;;:30;;-1:-1:-1;;;;;2269:30:2;;2172:132::o;855:20:3:-;;;-1:-1:-1;;;;;855:20:3;;:::o;3335:64:2:-;1336:5:3;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;3388:5:2;3379:14;;-1:-1:-1;;3379:14:2;;;3335:64::o;2348:130::-;2420:7;2444:20;;;:8;:20;;;;;:29;;;;2348:130::o;2528:142::-;2606:7;2630:20;;;:8;:20;;;;;:35;;;;2528:142::o;3439:596::-;3596:7;1455:6;;-1:-1:-1;;;1455:6:2;;;;1447:23;;;;;;;-1:-1:-1;;;;;1447:23:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1447:23:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;3621:24:2;;;;3613:41;;;;;-1:-1:-1;;;;;3613:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3660:22;;:::i;:::-;-1:-1:-1;3685:157:2;;;;;;;;3700:10;3685:157;;;-1:-1:-1;;;;;3685:157:2;;;;;;;;;;;;;;;;;;;3815:3;3685:157;;;;;;;;;;;;;3859:13;3857:15;;;;;;;;;-1:-1:-1;3848:25:2;;;:8;:25;;;;;;;:35;;;;;;;-1:-1:-1;;3848:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3916:13;;3895:109;;;;;;;;;;;;;;;;;3685:157;;;;3916:13;;3895:109;;;;;;;;;-1:-1:-1;;4017:13:2;;3439:596;;;;;;:::o;4077:234::-;1547:6;;4148:10;;-1:-1:-1;;;1547:6:2;;;;1539:23;;;;;;;-1:-1:-1;;;;;1539:23:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;1539:23:2;;;;;;;;;;;;;;;1617:1;1576:20;;;:8;:20;;;;;:29;-1:-1:-1;;;;;1576:29:2;:43;;1568:60;;;;;-1:-1:-1;;;;;1568:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4183:20;;;;:8;:20;;;;;:29;-1:-1:-1;;;;;4183:29:2;4216:10;4183:43;;:70;;-1:-1:-1;4242:10:2;4230:23;;;;:11;:23;;;;;;;;4183:70;4168:100;;;;;;;-1:-1:-1;;;;;4168:100:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4274:32;4295:10;4274:20;:32::i;:::-;4077:234;;:::o;1725:103:3:-;1336:5;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;1794:29;1813:9;1794:18;:29::i;5714:254:2:-;5812:9;5807:157;5831:12;:19;5827:1;:23;5807:157;;;5873:15;;5900:1;;5873:12;;5886:1;;5873:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;5873:29:2;;;5865:46;;;;;-1:-1:-1;;;;;5865:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5950:7;5919:11;:28;5931:12;5944:1;5931:15;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5919:28:2;;;;;;;;;;;-1:-1:-1;5919:28:2;:38;;-1:-1:-1;;5919:38:2;;;;;;;;;;-1:-1:-1;5852:3:2;5807:157;;;;5714:254;;:::o;6019:145::-;6091:20;;;;:8;:20;;;;;;;;6084:27;;-1:-1:-1;;6084:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6122:37;;6148:10;6122:37;;;;6100:10;;6122:37;;;;;;;;6019:145;:::o;1963:179:3:-;-1:-1:-1;;;;;2033:23:3;;;;2025:40;;;;;-1:-1:-1;;;;;2025:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:5;;;2076:38;;-1:-1:-1;;;;;2076:38:3;;;;2097:5;;;2076:38;;;2120:5;:17;;-1:-1:-1;;2120:17:3;-1:-1:-1;;;;;2120:17:3;;;;;;;;;;1963:179::o;1080:5086:2:-;;;;;;;;;-1:-1:-1;1080:5086:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o","source":"pragma solidity ^0.5.3;\n\n\nimport \"../interface/IArbitrage.sol\";\nimport \"./Ownable.sol\";\n\n\n/**\n * @title Arbitrage\n * @dev Arbitrage contract\n *\n * @author Cyril Lapinte - <cyril.lapinte@mtpelerin.com>\n *\n * @notice Copyright © 2016 - 2019 Cyril Lapinte - All Rights Reserved\n * @notice This content cannot be used, copied or reproduced in part or in whole\n * @notice without the express and written permission of Mt Pelerin Group SA.\n * @notice Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>\n * @notice All matters regarding the intellectual property of this code or software\n * @notice are subjects to Swiss Law without reference to its conflicts of law rules.\n *\n * Error messages\n * AR01: Contract must be active\n * AR02: Dispute must be active\n * AR03: Defendant cannot be null\n * AR04: Message sender must be either the claimant or an arbitrator\n * AR05: Message sender must be either the defendant or an arbitrator\n * AR06: Resolution must match with the resolution hash\n * AR07: Unable to execute contract operation\n * AR08: Arbitrator address cannot be null\n*/\ncontract Arbitrage is IArbitrage, Ownable {\n\n  bool public active = true;\n  mapping(address => bool) public arbitrators;\n\n  struct Dispute {\n    address claimant;\n    address arbitrable;\n    address defendant;\n    uint256 raisedAt;\n    bytes32 resolutionHash;\n  }\n  mapping(uint256 => Dispute) disputes;\n  uint256 public disputesCount;\n\n  modifier whenActive() {\n    require(active, \"AR01\");\n    _;\n  }\n\n  modifier whenDisputeActive(uint256 _disputeId) {\n    require(active, \"AR01\");\n    require(disputes[_disputeId].claimant != address(0), \"AR02\");\n    _;\n  }\n\n  /**\n   * @dev constructor\n   */\n  constructor(address[] memory _arbitrators) public {\n    updateArbitrators(_arbitrators, true);\n  }\n\n  /**\n   * @dev dispute claimant\n   */\n  function disputeClaimant(uint256 _disputeId)\n    external view returns (address)\n  {\n    return disputes[_disputeId].claimant;\n  }\n\n  /**\n   * @dev dispute arbitrable\n   */\n  function disputeArbitrable(uint256 _disputeId)\n    external view returns (address)\n  {\n    return disputes[_disputeId].arbitrable;\n  }\n\n  /**\n   * @dev dispute defendant\n   */\n  function disputeDefendant(uint256 _disputeId)\n    external view returns (address)\n  {\n    return disputes[_disputeId].defendant;\n  }\n\n  /**\n   * @dev dispute raised at\n   */\n  function disputeRaisedAt(uint256 _disputeId)\n    external view returns (uint256)\n  {\n    return disputes[_disputeId].raisedAt;\n  }\n\n  /**\n   * @dev dispute resolution hash\n   */\n  function disputeResolutionHash(uint256 _disputeId)\n    external view returns (bytes32)\n  {\n    return disputes[_disputeId].resolutionHash;\n  }\n\n  /**\n   * @dev disputeStatus\n   */\n  function disputeStatus(uint256 _disputeId)\n    public view returns (DisputeStatus)\n  {\n    if (disputes[_disputeId].claimant != address(0)) {\n      return DisputeStatus.ACTIVE;\n    }\n    return DisputeStatus.CLOSED; \n  }\n\n  /**\n   * @dev add third parties\n   */\n  function addArbitrators(address[] memory _arbitrators)\n    public onlyOwner whenActive\n  {\n    updateArbitrators(_arbitrators, true);\n  }\n\n  /**\n   * @dev remove third parties\n   */\n  function removeArbitrators(address[] memory _arbitrators)\n    public onlyOwner whenActive\n  {\n    updateArbitrators(_arbitrators, false);\n  }\n\n  /**\n   * @dev repudiate\n   */\n  function repudiate() public onlyOwner {\n    active = false; \n  }\n\n  /**\n   * @dev raise dispute\n   */\n  function raiseDispute(\n    address _arbitrable,\n    address _defendant,\n    bytes32 _reasonHash,\n    bytes32 _resolutionHash)\n    public whenActive returns (uint256)\n  {\n    require(_defendant != address(0), \"AR03\");\n    Dispute memory dispute = Dispute(\n      msg.sender,\n      _arbitrable,\n      _defendant,\n      // solium-disable-next-line security/no-block-members\n      now,\n      _resolutionHash);\n    disputes[++disputesCount] = dispute;\n\n    emit DisputeRaised(\n      disputesCount,\n      _arbitrable,\n      msg.sender,\n      _defendant,\n      _reasonHash);\n    return disputesCount;\n  }\n\n  /**\n   * @dev closing dispute\n   */\n  function closeDispute(uint256 _disputeId)\n    public whenDisputeActive(_disputeId)\n  {\n    require(\n      disputes[_disputeId].claimant == msg.sender || arbitrators[msg.sender],\n      \"AR04\");\n    closeDisputeInternal(_disputeId);\n  }\n\n  /**\n   * @dev suggest dispute resolution\n   */\n  function suggestDisputeResolution(\n    uint256 _disputeId,\n    bytes32 _resolutionHash) public whenDisputeActive(_disputeId)\n  {\n    Dispute storage dispute = disputes[_disputeId];\n    require(dispute.claimant == msg.sender || arbitrators[msg.sender], \"AR04\");\n\n    dispute.resolutionHash = _resolutionHash;\n    emit DisputeResolutionSuggested(_disputeId, msg.sender, _resolutionHash);\n  }\n\n  /*\n   * @dev resolve dispute\n   */\n  function resolveDispute(uint256 _disputeId, bytes memory _resolution)\n    public whenDisputeActive(_disputeId)\n  {\n    Dispute storage dispute = disputes[_disputeId];\n    require(\n      dispute.defendant == msg.sender || arbitrators[msg.sender],\n      \"AR05\");\n    \n    if (dispute.arbitrable != address(0) && dispute.resolutionHash != 0) {\n      require(keccak256(_resolution) == dispute.resolutionHash, \"AR06\");\n      address contractAddress = address(dispute.arbitrable);\n      // solium-disable-next-line security/no-low-level-calls\n      (bool success,) = contractAddress.call(_resolution);\n      require(success, \"AR07\");\n    }\n      \n    emit DisputeResolved(_disputeId, msg.sender, dispute.resolutionHash);\n    closeDisputeInternal(_disputeId);\n  }\n\n  /**\n   * @dev update many third parties\n   * @param _arbitrators arbitrators to update\n   * @param _active whether the arbitrators are added or removed\n   */\n  function updateArbitrators(address[] memory _arbitrators, bool _active)\n    internal\n  {\n    for (uint256 i = 0; i < _arbitrators.length; i++) {\n      require(_arbitrators[i] != address(0), \"AR08\");\n      arbitrators[_arbitrators[i]] = _active;\n    }\n  }\n\n  /**\n   * @dev closing dispute internal\n   */\n  function closeDisputeInternal(uint256 _disputeId) internal {\n    delete disputes[_disputeId];\n    emit DisputeClosed(_disputeId, msg.sender);\n  }\n}\n","sourcePath":"/home/node/project/contracts/implementation/Arbitrage.sol","ast":{"absolutePath":"/home/node/project/contracts/implementation/Arbitrage.sol","exportedSymbols":{"Arbitrage":[967]},"id":968,"nodeType":"SourceUnit","nodes":[{"id":491,"literals":["solidity","^","0.5",".3"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"/home/node/project/contracts/interface/IArbitrage.sol","file":"../interface/IArbitrage.sol","id":492,"nodeType":"ImportDirective","scope":968,"sourceUnit":1283,"src":"26:37:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/node/project/contracts/implementation/Ownable.sol","file":"./Ownable.sol","id":493,"nodeType":"ImportDirective","scope":968,"sourceUnit":1056,"src":"64:23:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":494,"name":"IArbitrage","nodeType":"UserDefinedTypeName","referencedDeclaration":1282,"src":"1102:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrage_$1282","typeString":"contract IArbitrage"}},"id":495,"nodeType":"InheritanceSpecifier","src":"1102:10:2"},{"arguments":null,"baseName":{"contractScope":null,"id":496,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":1055,"src":"1114:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$1055","typeString":"contract Ownable"}},"id":497,"nodeType":"InheritanceSpecifier","src":"1114:7:2"}],"contractDependencies":[1055,1282],"contractKind":"contract","documentation":"@title Arbitrage\n@dev Arbitrage contract\n * @author Cyril Lapinte - <cyril.lapinte@mtpelerin.com>\n * @notice Copyright © 2016 - 2019 Cyril Lapinte - All Rights Reserved\n@notice This content cannot be used, copied or reproduced in part or in whole\n@notice without the express and written permission of Mt Pelerin Group SA.\n@notice Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>\n@notice All matters regarding the intellectual property of this code or software\n@notice are subjects to Swiss Law without reference to its conflicts of law rules.\n * Error messages\nAR01: Contract must be active\nAR02: Dispute must be active\nAR03: Defendant cannot be null\nAR04: Message sender must be either the claimant or an arbitrator\nAR05: Message sender must be either the defendant or an arbitrator\nAR06: Resolution must match with the resolution hash\nAR07: Unable to execute contract operation\nAR08: Arbitrator address cannot be null","fullyImplemented":true,"id":967,"linearizedBaseContracts":[967,1055,1282],"name":"Arbitrage","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":500,"name":"active","nodeType":"VariableDeclaration","scope":967,"src":"1127:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":498,"name":"bool","nodeType":"ElementaryTypeName","src":"1127:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"argumentTypes":null,"hexValue":"74727565","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1148:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"id":504,"name":"arbitrators","nodeType":"VariableDeclaration","scope":967,"src":"1156:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":503,"keyType":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"1164:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1156:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":502,"name":"bool","nodeType":"ElementaryTypeName","src":"1175:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"public"},{"canonicalName":"Arbitrage.Dispute","id":515,"members":[{"constant":false,"id":506,"name":"claimant","nodeType":"VariableDeclaration","scope":515,"src":"1225:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"1225:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":508,"name":"arbitrable","nodeType":"VariableDeclaration","scope":515,"src":"1247:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":510,"name":"defendant","nodeType":"VariableDeclaration","scope":515,"src":"1271:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"1271:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":512,"name":"raisedAt","nodeType":"VariableDeclaration","scope":515,"src":"1294:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":514,"name":"resolutionHash","nodeType":"VariableDeclaration","scope":515,"src":"1316:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"name":"Dispute","nodeType":"StructDefinition","scope":967,"src":"1204:139:2","visibility":"public"},{"constant":false,"id":519,"name":"disputes","nodeType":"VariableDeclaration","scope":967,"src":"1346:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute)"},"typeName":{"id":518,"keyType":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1346:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute)"},"valueType":{"contractScope":null,"id":517,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"1365:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}}},"value":null,"visibility":"internal"},{"constant":false,"id":521,"name":"disputesCount","nodeType":"VariableDeclaration","scope":967,"src":"1386:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"body":{"id":529,"nodeType":"Block","src":"1441:41:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":524,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1455:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523031","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1463:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""},"value":"AR01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""}],"id":523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"1447:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1447:23:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"1447:23:2"},{"id":528,"nodeType":"PlaceholderStatement","src":"1476:1:2"}]},"documentation":null,"id":530,"name":"whenActive","nodeType":"ModifierDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[],"src":"1438:2:2"},"src":"1419:63:2","visibility":"internal"},{"body":{"id":552,"nodeType":"Block","src":"1533:107:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":535,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1547:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523031","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""},"value":"AR01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""}],"id":534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"1539:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1539:23:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"1539:23:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":540,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1576:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":542,"indexExpression":{"argumentTypes":null,"id":541,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1585:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1576:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"1576:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1617:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1609:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1609:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1576:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523032","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1621:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_0f7db084491bdc8e5d874c90508a3efc2cb8083d8da1179ac2dcb2b6d2208288","typeString":"literal_string \"AR02\""},"value":"AR02"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f7db084491bdc8e5d874c90508a3efc2cb8083d8da1179ac2dcb2b6d2208288","typeString":"literal_string \"AR02\""}],"id":539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"1568:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1568:60:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"1568:60:2"},{"id":551,"nodeType":"PlaceholderStatement","src":"1634:1:2"}]},"documentation":null,"id":553,"name":"whenDisputeActive","nodeType":"ModifierDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"name":"_disputeId","nodeType":"VariableDeclaration","scope":553,"src":"1513:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1512:20:2"},"src":"1486:154:2","visibility":"internal"},{"body":{"id":564,"nodeType":"Block","src":"1728:48:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":560,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"1752:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"hexValue":"74727565","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1766:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":559,"name":"updateArbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"1734:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address[] memory,bool)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1734:37:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"1734:37:2"}]},"documentation":"@dev constructor","id":565,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":565,"src":"1690:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":555,"length":null,"nodeType":"ArrayTypeName","src":"1690:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"1689:31:2"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"1728:0:2"},"scope":967,"src":"1678:98:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":577,"nodeType":"Block","src":"1902:47:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":572,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1915:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":574,"indexExpression":{"argumentTypes":null,"id":573,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"1924:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1915:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"1915:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":571,"id":576,"nodeType":"Return","src":"1908:36:2"}]},"documentation":"@dev dispute claimant","id":578,"implemented":true,"kind":"function","modifiers":[],"name":"disputeClaimant","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"name":"_disputeId","nodeType":"VariableDeclaration","scope":578,"src":"1844:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1843:20:2"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"name":"","nodeType":"VariableDeclaration","scope":578,"src":"1891:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"1891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1890:9:2"},"scope":967,"src":"1819:130:2","stateMutability":"view","superFunction":1144,"visibility":"external"},{"body":{"id":590,"nodeType":"Block","src":"2079:49:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":585,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2092:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":587,"indexExpression":{"argumentTypes":null,"id":586,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2101:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2092:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrable","nodeType":"MemberAccess","referencedDeclaration":508,"src":"2092:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":584,"id":589,"nodeType":"Return","src":"2085:38:2"}]},"documentation":"@dev dispute arbitrable","id":591,"implemented":true,"kind":"function","modifiers":[],"name":"disputeArbitrable","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"name":"_disputeId","nodeType":"VariableDeclaration","scope":591,"src":"2021:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2020:20:2"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"name":"","nodeType":"VariableDeclaration","scope":591,"src":"2068:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"2068:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2067:9:2"},"scope":967,"src":"1994:134:2","stateMutability":"view","superFunction":1151,"visibility":"external"},{"body":{"id":603,"nodeType":"Block","src":"2256:48:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":598,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2269:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":600,"indexExpression":{"argumentTypes":null,"id":599,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2278:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2269:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defendant","nodeType":"MemberAccess","referencedDeclaration":510,"src":"2269:30:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":597,"id":602,"nodeType":"Return","src":"2262:37:2"}]},"documentation":"@dev dispute defendant","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"disputeDefendant","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"name":"_disputeId","nodeType":"VariableDeclaration","scope":604,"src":"2198:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2197:20:2"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"name":"","nodeType":"VariableDeclaration","scope":604,"src":"2245:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2244:9:2"},"scope":967,"src":"2172:132:2","stateMutability":"view","superFunction":1158,"visibility":"external"},{"body":{"id":616,"nodeType":"Block","src":"2431:47:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":611,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2444:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":613,"indexExpression":{"argumentTypes":null,"id":612,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2453:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2444:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"raisedAt","nodeType":"MemberAccess","referencedDeclaration":512,"src":"2444:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":610,"id":615,"nodeType":"Return","src":"2437:36:2"}]},"documentation":"@dev dispute raised at","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"disputeRaisedAt","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"name":"_disputeId","nodeType":"VariableDeclaration","scope":617,"src":"2373:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2372:20:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"name":"","nodeType":"VariableDeclaration","scope":617,"src":"2420:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2419:9:2"},"scope":967,"src":"2348:130:2","stateMutability":"view","superFunction":1165,"visibility":"external"},{"body":{"id":629,"nodeType":"Block","src":"2617:53:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":624,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2630:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":626,"indexExpression":{"argumentTypes":null,"id":625,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"2639:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2630:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"2630:35:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":623,"id":628,"nodeType":"Return","src":"2623:42:2"}]},"documentation":"@dev dispute resolution hash","id":630,"implemented":true,"kind":"function","modifiers":[],"name":"disputeResolutionHash","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"name":"_disputeId","nodeType":"VariableDeclaration","scope":630,"src":"2559:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2558:20:2"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"name":"","nodeType":"VariableDeclaration","scope":630,"src":"2606:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2606:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2605:9:2"},"scope":967,"src":"2528:142:2","stateMutability":"view","superFunction":1172,"visibility":"external"},{"body":{"id":653,"nodeType":"Block","src":"2795:135:2","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":637,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2805:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":639,"indexExpression":{"argumentTypes":null,"id":638,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"2814:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2805:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"2805:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2846:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2838:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2838:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2805:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":649,"nodeType":"IfStatement","src":"2801:91:2","trueBody":{"id":648,"nodeType":"Block","src":"2850:42:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":645,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2865:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$1130_$","typeString":"type(enum IArbitrage.DisputeStatus)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2865:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"}},"functionReturnParameters":636,"id":647,"nodeType":"Return","src":"2858:27:2"}]}},{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":650,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2904:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$1130_$","typeString":"type(enum IArbitrage.DisputeStatus)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"CLOSED","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2904:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"}},"functionReturnParameters":636,"id":652,"nodeType":"Return","src":"2897:27:2"}]},"documentation":"@dev disputeStatus","id":654,"implemented":true,"kind":"function","modifiers":[],"name":"disputeStatus","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"name":"_disputeId","nodeType":"VariableDeclaration","scope":654,"src":"2733:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2733:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2732:20:2"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"name":"","nodeType":"VariableDeclaration","scope":654,"src":"2778:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"},"typeName":{"contractScope":null,"id":634,"name":"DisputeStatus","nodeType":"UserDefinedTypeName","referencedDeclaration":1130,"src":"2778:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"}},"value":null,"visibility":"internal"}],"src":"2777:15:2"},"scope":967,"src":"2710:220:2","stateMutability":"view","superFunction":1179,"visibility":"public"},{"body":{"id":669,"nodeType":"Block","src":"3063:48:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":665,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"3087:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"hexValue":"74727565","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3101:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":664,"name":"updateArbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3069:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address[] memory,bool)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3069:37:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"3069:37:2"}]},"documentation":"@dev add third parties","id":670,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":660,"modifierName":{"argumentTypes":null,"id":659,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3040:9:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3040:9:2"},{"arguments":null,"id":662,"modifierName":{"argumentTypes":null,"id":661,"name":"whenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3050:10:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3050:10:2"}],"name":"addArbitrators","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":670,"src":"2998:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2998:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":656,"length":null,"nodeType":"ArrayTypeName","src":"2998:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"2997:31:2"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"3063:0:2"},"scope":967,"src":"2974:137:2","stateMutability":"nonpayable","superFunction":1222,"visibility":"public"},{"body":{"id":685,"nodeType":"Block","src":"3250:49:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":681,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"3274:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"hexValue":"66616c7365","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3288:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":680,"name":"updateArbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3256:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address[] memory,bool)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3256:38:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"ExpressionStatement","src":"3256:38:2"}]},"documentation":"@dev remove third parties","id":686,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":676,"modifierName":{"argumentTypes":null,"id":675,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3227:9:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3227:9:2"},{"arguments":null,"id":678,"modifierName":{"argumentTypes":null,"id":677,"name":"whenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3237:10:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3237:10:2"}],"name":"removeArbitrators","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":686,"src":"3185:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"3185:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":672,"length":null,"nodeType":"ArrayTypeName","src":"3185:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"3184:31:2"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"3250:0:2"},"scope":967,"src":"3158:141:2","stateMutability":"nonpayable","superFunction":1228,"visibility":"public"},{"body":{"id":695,"nodeType":"Block","src":"3373:26:2","statements":[{"expression":{"argumentTypes":null,"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":691,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3379:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"66616c7365","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3388:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3379:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"ExpressionStatement","src":"3379:14:2"}]},"documentation":"@dev repudiate","id":696,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":689,"modifierName":{"argumentTypes":null,"id":688,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3363:9:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3363:9:2"}],"name":"repudiate","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3353:2:2"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"3373:0:2"},"scope":967,"src":"3335:64:2","stateMutability":"nonpayable","superFunction":1231,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"3607:428:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":712,"name":"_defendant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3621:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3635:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3635:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3621:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523033","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3647:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_3d0def702891fa2c2e00205ce64089674acf1377c2088a4fe7b17cca89ff2e5d","typeString":"literal_string \"AR03\""},"value":"AR03"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d0def702891fa2c2e00205ce64089674acf1377c2088a4fe7b17cca89ff2e5d","typeString":"literal_string \"AR03\""}],"id":711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"3613:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3613:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"3613:41:2"},{"assignments":[721],"declarations":[{"constant":false,"id":721,"name":"dispute","nodeType":"VariableDeclaration","scope":749,"src":"3660:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_memory_ptr","typeString":"struct Arbitrage.Dispute"},"typeName":{"contractScope":null,"id":720,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"3660:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}},"value":null,"visibility":"internal"}],"id":730,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3700:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3700:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":725,"name":"_arbitrable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3718:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":726,"name":"_defendant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3737:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":727,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"3815:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":728,"name":"_resolutionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"3826:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":722,"name":"Dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3685:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Dispute_$515_storage_ptr_$","typeString":"type(struct Arbitrage.Dispute storage pointer)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:157:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_memory","typeString":"struct Arbitrage.Dispute memory"}},"nodeType":"VariableDeclarationStatement","src":"3660:182:2"},{"expression":{"argumentTypes":null,"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":731,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3848:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":734,"indexExpression":{"argumentTypes":null,"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3857:15:2","subExpression":{"argumentTypes":null,"id":732,"name":"disputesCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3859:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3848:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":735,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"3876:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_memory_ptr","typeString":"struct Arbitrage.Dispute memory"}},"src":"3848:35:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":737,"nodeType":"ExpressionStatement","src":"3848:35:2"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":739,"name":"disputesCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3916:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":740,"name":"_arbitrable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3937:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3956:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3956:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":743,"name":"_defendant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3974:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":744,"name":"_reasonHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"3992:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":738,"name":"DisputeRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3895:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,address,address,bytes32)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3895:109:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"3890:114:2"},{"expression":{"argumentTypes":null,"id":747,"name":"disputesCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4017:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":710,"id":748,"nodeType":"Return","src":"4010:20:2"}]},"documentation":"@dev raise dispute","id":750,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":707,"modifierName":{"argumentTypes":null,"id":706,"name":"whenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3576:10:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3576:10:2"}],"name":"raiseDispute","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"name":"_arbitrable","nodeType":"VariableDeclaration","scope":750,"src":"3466:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":700,"name":"_defendant","nodeType":"VariableDeclaration","scope":750,"src":"3491:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"3491:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":702,"name":"_reasonHash","nodeType":"VariableDeclaration","scope":750,"src":"3515:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_resolutionHash","nodeType":"VariableDeclaration","scope":750,"src":"3540:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3540:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3460:104:2"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"name":"","nodeType":"VariableDeclaration","scope":750,"src":"3596:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3595:9:2"},"scope":967,"src":"3439:596:2","stateMutability":"nonpayable","superFunction":1197,"visibility":"public"},{"body":{"id":778,"nodeType":"Block","src":"4162:149:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":759,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4183:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":761,"indexExpression":{"argumentTypes":null,"id":760,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4192:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4183:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"4183:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4216:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4216:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4183:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":766,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"4230:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":769,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4242:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4242:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4230:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4183:70:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523034","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4261:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""},"value":"AR04"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""}],"id":758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4168:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4168:100:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"4168:100:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":775,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4295:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"closeDisputeInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4274:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4274:32:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"ExpressionStatement","src":"4274:32:2"}]},"documentation":"@dev closing dispute","id":779,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":755,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4148:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":756,"modifierName":{"argumentTypes":null,"id":754,"name":"whenDisputeActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4130:17:2","typeDescriptions":{"typeIdentifier":"t_modifier$_t_uint256_$","typeString":"modifier (uint256)"}},"nodeType":"ModifierInvocation","src":"4130:29:2"}],"name":"closeDispute","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"_disputeId","nodeType":"VariableDeclaration","scope":779,"src":"4099:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4098:20:2"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"4162:0:2"},"scope":967,"src":"4077:234:2","stateMutability":"nonpayable","superFunction":1202,"visibility":"public"},{"body":{"id":822,"nodeType":"Block","src":"4491:262:2","statements":[{"assignments":[790],"declarations":[{"constant":false,"id":790,"name":"dispute","nodeType":"VariableDeclaration","scope":822,"src":"4497:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"},"typeName":{"contractScope":null,"id":789,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"4497:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}},"value":null,"visibility":"internal"}],"id":794,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":791,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4523:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":793,"indexExpression":{"argumentTypes":null,"id":792,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4532:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4523:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4497:46:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":796,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4557:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"4557:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4577:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4577:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4557:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":801,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"4591:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":804,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4603:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4603:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4591:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4557:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523034","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4616:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""},"value":"AR04"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""}],"id":795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4549:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4549:74:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"ExpressionStatement","src":"4549:74:2"},{"expression":{"argumentTypes":null,"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":809,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4630:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"4630:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":812,"name":"_resolutionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4655:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4630:40:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":814,"nodeType":"ExpressionStatement","src":"4630:40:2"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":816,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4708:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":817,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4720:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4720:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":819,"name":"_resolutionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4732:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":815,"name":"DisputeResolutionSuggested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4681:26:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,bytes32)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4681:67:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"EmitStatement","src":"4676:72:2"}]},"documentation":"@dev suggest dispute resolution","id":823,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":786,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4477:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":787,"modifierName":{"argumentTypes":null,"id":785,"name":"whenDisputeActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4459:17:2","typeDescriptions":{"typeIdentifier":"t_modifier$_t_uint256_$","typeString":"modifier (uint256)"}},"nodeType":"ModifierInvocation","src":"4459:29:2"}],"name":"suggestDisputeResolution","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"_disputeId","nodeType":"VariableDeclaration","scope":823,"src":"4403:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4403:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":783,"name":"_resolutionHash","nodeType":"VariableDeclaration","scope":823,"src":"4427:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4427:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4397:54:2"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"4491:0:2"},"scope":967,"src":"4364:389:2","stateMutability":"nonpayable","superFunction":1209,"visibility":"public"},{"body":{"id":907,"nodeType":"Block","src":"4907:643:2","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"name":"dispute","nodeType":"VariableDeclaration","scope":907,"src":"4913:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"},"typeName":{"contractScope":null,"id":833,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"4913:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}},"value":null,"visibility":"internal"}],"id":838,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":835,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4939:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":837,"indexExpression":{"argumentTypes":null,"id":836,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4948:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4939:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4913:46:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":840,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4980:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defendant","nodeType":"MemberAccess","referencedDeclaration":510,"src":"4980:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5001:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5001:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4980:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":845,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"5015:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":848,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5027:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5027:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5015:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4980:58:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523035","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5046:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_88f49a007462a8f5c4b6912382e01a4ff9fb7127b58c6507948c19eaa32c4b1a","typeString":"literal_string \"AR05\""},"value":"AR05"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_88f49a007462a8f5c4b6912382e01a4ff9fb7127b58c6507948c19eaa32c4b1a","typeString":"literal_string \"AR05\""}],"id":839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4965:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4965:88:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"4965:88:2"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":853,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5068:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrable","nodeType":"MemberAccess","referencedDeclaration":508,"src":"5068:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5098:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5090:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5090:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5068:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":859,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5104:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5104:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5130:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5104:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5068:63:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":894,"nodeType":"IfStatement","src":"5064:363:2","trueBody":{"id":893,"nodeType":"Block","src":"5133:294:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":866,"name":"_resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5159:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":865,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"5149:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":868,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5175:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5175:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5149:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523036","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5199:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_0158cd37ad52f152a836f3d3633306cf831be09006bd091708c07f8dbf865ea8","typeString":"literal_string \"AR06\""},"value":"AR06"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0158cd37ad52f152a836f3d3633306cf831be09006bd091708c07f8dbf865ea8","typeString":"literal_string \"AR06\""}],"id":864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"5141:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5141:65:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"5141:65:2"},{"assignments":[875],"declarations":[{"constant":false,"id":875,"name":"contractAddress","nodeType":"VariableDeclaration","scope":893,"src":"5214:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"5214:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":880,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":877,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5248:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrable","nodeType":"MemberAccess","referencedDeclaration":508,"src":"5248:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5240:27:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5214:53:2"},{"assignments":[882,null],"declarations":[{"constant":false,"id":882,"name":"success","nodeType":"VariableDeclaration","scope":893,"src":"5338:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":881,"name":"bool","nodeType":"ElementaryTypeName","src":"5338:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},null],"id":887,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":885,"name":"_resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5376:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":883,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"5355:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5355:20:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5355:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5337:51:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":889,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"5404:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523037","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5413:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e62d26531ec36bdea091d409ae715fe40ddd03adc753e3de980f4ba737faf803","typeString":"literal_string \"AR07\""},"value":"AR07"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e62d26531ec36bdea091d409ae715fe40ddd03adc753e3de980f4ba737faf803","typeString":"literal_string \"AR07\""}],"id":888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"5396:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5396:24:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"5396:24:2"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":896,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5460:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5472:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5472:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":899,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5484:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5484:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":895,"name":"DisputeResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5444:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,bytes32)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5444:63:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"EmitStatement","src":"5439:68:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":904,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5534:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"closeDisputeInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5513:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5513:32:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":906,"nodeType":"ExpressionStatement","src":"5513:32:2"}]},"documentation":null,"id":908,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":830,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4893:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":831,"modifierName":{"argumentTypes":null,"id":829,"name":"whenDisputeActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4875:17:2","typeDescriptions":{"typeIdentifier":"t_modifier$_t_uint256_$","typeString":"modifier (uint256)"}},"nodeType":"ModifierInvocation","src":"4875:29:2"}],"name":"resolveDispute","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"name":"_disputeId","nodeType":"VariableDeclaration","scope":908,"src":"4818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":827,"name":"_resolution","nodeType":"VariableDeclaration","scope":908,"src":"4838:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":826,"name":"bytes","nodeType":"ElementaryTypeName","src":"4838:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4817:46:2"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"4907:0:2"},"scope":967,"src":"4794:756:2","stateMutability":"nonpayable","superFunction":1216,"visibility":"public"},{"body":{"id":948,"nodeType":"Block","src":"5801:167:2","statements":[{"body":{"id":946,"nodeType":"Block","src":"5857:107:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":928,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5873:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":930,"indexExpression":{"argumentTypes":null,"id":929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5886:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5873:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5900:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5892:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5892:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5873:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523038","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5904:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4c4a1607932ff7766aad67124581d257ae149b0353a035e4dabf8951c05b92fb","typeString":"literal_string \"AR08\""},"value":"AR08"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c4a1607932ff7766aad67124581d257ae149b0353a035e4dabf8951c05b92fb","typeString":"literal_string \"AR08\""}],"id":927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"5865:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5865:46:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"5865:46:2"},{"expression":{"argumentTypes":null,"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":938,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"5919:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":942,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":939,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5931:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":941,"indexExpression":{"argumentTypes":null,"id":940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5944:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5931:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5919:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":943,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"5950:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5919:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"ExpressionStatement","src":"5919:38:2"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5827:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":921,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5831:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5831:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5827:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"initializationExpression":{"assignments":[917],"declarations":[{"constant":false,"id":917,"name":"i","nodeType":"VariableDeclaration","scope":947,"src":"5812:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5812:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":919,"initialValue":{"argumentTypes":null,"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5824:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5812:13:2"},"loopExpression":{"expression":{"argumentTypes":null,"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5852:3:2","subExpression":{"argumentTypes":null,"id":924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5852:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"nodeType":"ExpressionStatement","src":"5852:3:2"},"nodeType":"ForStatement","src":"5807:157:2"}]},"documentation":"@dev update many third parties\n@param _arbitrators arbitrators to update\n@param _active whether the arbitrators are added or removed","id":949,"implemented":true,"kind":"function","modifiers":[],"name":"updateArbitrators","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":949,"src":"5741:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"5741:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":910,"length":null,"nodeType":"ArrayTypeName","src":"5741:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":913,"name":"_active","nodeType":"VariableDeclaration","scope":949,"src":"5772:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":912,"name":"bool","nodeType":"ElementaryTypeName","src":"5772:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5740:45:2"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"5801:0:2"},"scope":967,"src":"5714:254:2","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":965,"nodeType":"Block","src":"6078:86:2","statements":[{"expression":{"argumentTypes":null,"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6084:27:2","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":954,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6091:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":956,"indexExpression":{"argumentTypes":null,"id":955,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6100:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6091:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"6084:27:2"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":960,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6136:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"6148:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6148:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":959,"name":"DisputeClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6122:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6122:37:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"EmitStatement","src":"6117:42:2"}]},"documentation":"@dev closing dispute internal","id":966,"implemented":true,"kind":"function","modifiers":[],"name":"closeDisputeInternal","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"name":"_disputeId","nodeType":"VariableDeclaration","scope":966,"src":"6049:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6048:20:2"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"6078:0:2"},"scope":967,"src":"6019:145:2","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"}],"scope":968,"src":"1080:5086:2"}],"src":"0:6167:2"},"legacyAST":{"absolutePath":"/home/node/project/contracts/implementation/Arbitrage.sol","exportedSymbols":{"Arbitrage":[967]},"id":968,"nodeType":"SourceUnit","nodes":[{"id":491,"literals":["solidity","^","0.5",".3"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"/home/node/project/contracts/interface/IArbitrage.sol","file":"../interface/IArbitrage.sol","id":492,"nodeType":"ImportDirective","scope":968,"sourceUnit":1283,"src":"26:37:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/node/project/contracts/implementation/Ownable.sol","file":"./Ownable.sol","id":493,"nodeType":"ImportDirective","scope":968,"sourceUnit":1056,"src":"64:23:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":494,"name":"IArbitrage","nodeType":"UserDefinedTypeName","referencedDeclaration":1282,"src":"1102:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrage_$1282","typeString":"contract IArbitrage"}},"id":495,"nodeType":"InheritanceSpecifier","src":"1102:10:2"},{"arguments":null,"baseName":{"contractScope":null,"id":496,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":1055,"src":"1114:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$1055","typeString":"contract Ownable"}},"id":497,"nodeType":"InheritanceSpecifier","src":"1114:7:2"}],"contractDependencies":[1055,1282],"contractKind":"contract","documentation":"@title Arbitrage\n@dev Arbitrage contract\n * @author Cyril Lapinte - <cyril.lapinte@mtpelerin.com>\n * @notice Copyright © 2016 - 2019 Cyril Lapinte - All Rights Reserved\n@notice This content cannot be used, copied or reproduced in part or in whole\n@notice without the express and written permission of Mt Pelerin Group SA.\n@notice Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>\n@notice All matters regarding the intellectual property of this code or software\n@notice are subjects to Swiss Law without reference to its conflicts of law rules.\n * Error messages\nAR01: Contract must be active\nAR02: Dispute must be active\nAR03: Defendant cannot be null\nAR04: Message sender must be either the claimant or an arbitrator\nAR05: Message sender must be either the defendant or an arbitrator\nAR06: Resolution must match with the resolution hash\nAR07: Unable to execute contract operation\nAR08: Arbitrator address cannot be null","fullyImplemented":true,"id":967,"linearizedBaseContracts":[967,1055,1282],"name":"Arbitrage","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":500,"name":"active","nodeType":"VariableDeclaration","scope":967,"src":"1127:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":498,"name":"bool","nodeType":"ElementaryTypeName","src":"1127:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"argumentTypes":null,"hexValue":"74727565","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1148:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"id":504,"name":"arbitrators","nodeType":"VariableDeclaration","scope":967,"src":"1156:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":503,"keyType":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"1164:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1156:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":502,"name":"bool","nodeType":"ElementaryTypeName","src":"1175:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"public"},{"canonicalName":"Arbitrage.Dispute","id":515,"members":[{"constant":false,"id":506,"name":"claimant","nodeType":"VariableDeclaration","scope":515,"src":"1225:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"1225:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":508,"name":"arbitrable","nodeType":"VariableDeclaration","scope":515,"src":"1247:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":510,"name":"defendant","nodeType":"VariableDeclaration","scope":515,"src":"1271:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"1271:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":512,"name":"raisedAt","nodeType":"VariableDeclaration","scope":515,"src":"1294:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":514,"name":"resolutionHash","nodeType":"VariableDeclaration","scope":515,"src":"1316:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"name":"Dispute","nodeType":"StructDefinition","scope":967,"src":"1204:139:2","visibility":"public"},{"constant":false,"id":519,"name":"disputes","nodeType":"VariableDeclaration","scope":967,"src":"1346:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute)"},"typeName":{"id":518,"keyType":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1346:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute)"},"valueType":{"contractScope":null,"id":517,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"1365:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}}},"value":null,"visibility":"internal"},{"constant":false,"id":521,"name":"disputesCount","nodeType":"VariableDeclaration","scope":967,"src":"1386:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"body":{"id":529,"nodeType":"Block","src":"1441:41:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":524,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1455:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523031","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1463:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""},"value":"AR01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""}],"id":523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"1447:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1447:23:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"1447:23:2"},{"id":528,"nodeType":"PlaceholderStatement","src":"1476:1:2"}]},"documentation":null,"id":530,"name":"whenActive","nodeType":"ModifierDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[],"src":"1438:2:2"},"src":"1419:63:2","visibility":"internal"},{"body":{"id":552,"nodeType":"Block","src":"1533:107:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":535,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1547:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523031","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""},"value":"AR01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f636556f193a519b608c35f1eb314a1e7a1ac6e46237d316b319b078fb731e4","typeString":"literal_string \"AR01\""}],"id":534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"1539:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1539:23:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"1539:23:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":540,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1576:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":542,"indexExpression":{"argumentTypes":null,"id":541,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1585:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1576:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"1576:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1617:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1609:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1609:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1576:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523032","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1621:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_0f7db084491bdc8e5d874c90508a3efc2cb8083d8da1179ac2dcb2b6d2208288","typeString":"literal_string \"AR02\""},"value":"AR02"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f7db084491bdc8e5d874c90508a3efc2cb8083d8da1179ac2dcb2b6d2208288","typeString":"literal_string \"AR02\""}],"id":539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"1568:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1568:60:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"1568:60:2"},{"id":551,"nodeType":"PlaceholderStatement","src":"1634:1:2"}]},"documentation":null,"id":553,"name":"whenDisputeActive","nodeType":"ModifierDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"name":"_disputeId","nodeType":"VariableDeclaration","scope":553,"src":"1513:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1512:20:2"},"src":"1486:154:2","visibility":"internal"},{"body":{"id":564,"nodeType":"Block","src":"1728:48:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":560,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"1752:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"hexValue":"74727565","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1766:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":559,"name":"updateArbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"1734:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address[] memory,bool)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1734:37:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"1734:37:2"}]},"documentation":"@dev constructor","id":565,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":565,"src":"1690:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":555,"length":null,"nodeType":"ArrayTypeName","src":"1690:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"1689:31:2"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"1728:0:2"},"scope":967,"src":"1678:98:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":577,"nodeType":"Block","src":"1902:47:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":572,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1915:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":574,"indexExpression":{"argumentTypes":null,"id":573,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"1924:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1915:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"1915:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":571,"id":576,"nodeType":"Return","src":"1908:36:2"}]},"documentation":"@dev dispute claimant","id":578,"implemented":true,"kind":"function","modifiers":[],"name":"disputeClaimant","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"name":"_disputeId","nodeType":"VariableDeclaration","scope":578,"src":"1844:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1843:20:2"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"name":"","nodeType":"VariableDeclaration","scope":578,"src":"1891:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"1891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1890:9:2"},"scope":967,"src":"1819:130:2","stateMutability":"view","superFunction":1144,"visibility":"external"},{"body":{"id":590,"nodeType":"Block","src":"2079:49:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":585,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2092:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":587,"indexExpression":{"argumentTypes":null,"id":586,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"2101:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2092:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrable","nodeType":"MemberAccess","referencedDeclaration":508,"src":"2092:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":584,"id":589,"nodeType":"Return","src":"2085:38:2"}]},"documentation":"@dev dispute arbitrable","id":591,"implemented":true,"kind":"function","modifiers":[],"name":"disputeArbitrable","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"name":"_disputeId","nodeType":"VariableDeclaration","scope":591,"src":"2021:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2020:20:2"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"name":"","nodeType":"VariableDeclaration","scope":591,"src":"2068:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"2068:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2067:9:2"},"scope":967,"src":"1994:134:2","stateMutability":"view","superFunction":1151,"visibility":"external"},{"body":{"id":603,"nodeType":"Block","src":"2256:48:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":598,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2269:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":600,"indexExpression":{"argumentTypes":null,"id":599,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2278:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2269:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defendant","nodeType":"MemberAccess","referencedDeclaration":510,"src":"2269:30:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":597,"id":602,"nodeType":"Return","src":"2262:37:2"}]},"documentation":"@dev dispute defendant","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"disputeDefendant","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"name":"_disputeId","nodeType":"VariableDeclaration","scope":604,"src":"2198:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2197:20:2"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"name":"","nodeType":"VariableDeclaration","scope":604,"src":"2245:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2244:9:2"},"scope":967,"src":"2172:132:2","stateMutability":"view","superFunction":1158,"visibility":"external"},{"body":{"id":616,"nodeType":"Block","src":"2431:47:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":611,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2444:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":613,"indexExpression":{"argumentTypes":null,"id":612,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"2453:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2444:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"raisedAt","nodeType":"MemberAccess","referencedDeclaration":512,"src":"2444:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":610,"id":615,"nodeType":"Return","src":"2437:36:2"}]},"documentation":"@dev dispute raised at","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"disputeRaisedAt","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"name":"_disputeId","nodeType":"VariableDeclaration","scope":617,"src":"2373:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2372:20:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"name":"","nodeType":"VariableDeclaration","scope":617,"src":"2420:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2419:9:2"},"scope":967,"src":"2348:130:2","stateMutability":"view","superFunction":1165,"visibility":"external"},{"body":{"id":629,"nodeType":"Block","src":"2617:53:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":624,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2630:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":626,"indexExpression":{"argumentTypes":null,"id":625,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"2639:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2630:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"2630:35:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":623,"id":628,"nodeType":"Return","src":"2623:42:2"}]},"documentation":"@dev dispute resolution hash","id":630,"implemented":true,"kind":"function","modifiers":[],"name":"disputeResolutionHash","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"name":"_disputeId","nodeType":"VariableDeclaration","scope":630,"src":"2559:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2558:20:2"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"name":"","nodeType":"VariableDeclaration","scope":630,"src":"2606:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2606:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2605:9:2"},"scope":967,"src":"2528:142:2","stateMutability":"view","superFunction":1172,"visibility":"external"},{"body":{"id":653,"nodeType":"Block","src":"2795:135:2","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":637,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2805:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":639,"indexExpression":{"argumentTypes":null,"id":638,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"2814:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2805:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"2805:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2846:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2838:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2838:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2805:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":649,"nodeType":"IfStatement","src":"2801:91:2","trueBody":{"id":648,"nodeType":"Block","src":"2850:42:2","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":645,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2865:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$1130_$","typeString":"type(enum IArbitrage.DisputeStatus)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2865:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"}},"functionReturnParameters":636,"id":647,"nodeType":"Return","src":"2858:27:2"}]}},{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":650,"name":"DisputeStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2904:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_DisputeStatus_$1130_$","typeString":"type(enum IArbitrage.DisputeStatus)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"CLOSED","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2904:20:2","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"}},"functionReturnParameters":636,"id":652,"nodeType":"Return","src":"2897:27:2"}]},"documentation":"@dev disputeStatus","id":654,"implemented":true,"kind":"function","modifiers":[],"name":"disputeStatus","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"name":"_disputeId","nodeType":"VariableDeclaration","scope":654,"src":"2733:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2733:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2732:20:2"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"name":"","nodeType":"VariableDeclaration","scope":654,"src":"2778:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"},"typeName":{"contractScope":null,"id":634,"name":"DisputeStatus","nodeType":"UserDefinedTypeName","referencedDeclaration":1130,"src":"2778:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_DisputeStatus_$1130","typeString":"enum IArbitrage.DisputeStatus"}},"value":null,"visibility":"internal"}],"src":"2777:15:2"},"scope":967,"src":"2710:220:2","stateMutability":"view","superFunction":1179,"visibility":"public"},{"body":{"id":669,"nodeType":"Block","src":"3063:48:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":665,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"3087:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"hexValue":"74727565","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3101:4:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":664,"name":"updateArbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3069:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address[] memory,bool)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3069:37:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"3069:37:2"}]},"documentation":"@dev add third parties","id":670,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":660,"modifierName":{"argumentTypes":null,"id":659,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3040:9:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3040:9:2"},{"arguments":null,"id":662,"modifierName":{"argumentTypes":null,"id":661,"name":"whenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3050:10:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3050:10:2"}],"name":"addArbitrators","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":670,"src":"2998:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2998:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":656,"length":null,"nodeType":"ArrayTypeName","src":"2998:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"2997:31:2"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"3063:0:2"},"scope":967,"src":"2974:137:2","stateMutability":"nonpayable","superFunction":1222,"visibility":"public"},{"body":{"id":685,"nodeType":"Block","src":"3250:49:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":681,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"3274:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"hexValue":"66616c7365","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3288:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":680,"name":"updateArbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3256:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address[] memory,bool)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3256:38:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"ExpressionStatement","src":"3256:38:2"}]},"documentation":"@dev remove third parties","id":686,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":676,"modifierName":{"argumentTypes":null,"id":675,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3227:9:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3227:9:2"},{"arguments":null,"id":678,"modifierName":{"argumentTypes":null,"id":677,"name":"whenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3237:10:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3237:10:2"}],"name":"removeArbitrators","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":686,"src":"3185:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"3185:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":672,"length":null,"nodeType":"ArrayTypeName","src":"3185:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"3184:31:2"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"3250:0:2"},"scope":967,"src":"3158:141:2","stateMutability":"nonpayable","superFunction":1228,"visibility":"public"},{"body":{"id":695,"nodeType":"Block","src":"3373:26:2","statements":[{"expression":{"argumentTypes":null,"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":691,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3379:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"66616c7365","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3388:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3379:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"ExpressionStatement","src":"3379:14:2"}]},"documentation":"@dev repudiate","id":696,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":689,"modifierName":{"argumentTypes":null,"id":688,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3363:9:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3363:9:2"}],"name":"repudiate","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3353:2:2"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"3373:0:2"},"scope":967,"src":"3335:64:2","stateMutability":"nonpayable","superFunction":1231,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"3607:428:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":712,"name":"_defendant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3621:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3635:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3635:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3621:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523033","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3647:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_3d0def702891fa2c2e00205ce64089674acf1377c2088a4fe7b17cca89ff2e5d","typeString":"literal_string \"AR03\""},"value":"AR03"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d0def702891fa2c2e00205ce64089674acf1377c2088a4fe7b17cca89ff2e5d","typeString":"literal_string \"AR03\""}],"id":711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"3613:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3613:41:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"3613:41:2"},{"assignments":[721],"declarations":[{"constant":false,"id":721,"name":"dispute","nodeType":"VariableDeclaration","scope":749,"src":"3660:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_memory_ptr","typeString":"struct Arbitrage.Dispute"},"typeName":{"contractScope":null,"id":720,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"3660:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}},"value":null,"visibility":"internal"}],"id":730,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3700:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3700:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":725,"name":"_arbitrable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3718:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":726,"name":"_defendant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3737:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":727,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"3815:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":728,"name":"_resolutionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"3826:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":722,"name":"Dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3685:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Dispute_$515_storage_ptr_$","typeString":"type(struct Arbitrage.Dispute storage pointer)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:157:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_memory","typeString":"struct Arbitrage.Dispute memory"}},"nodeType":"VariableDeclarationStatement","src":"3660:182:2"},{"expression":{"argumentTypes":null,"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":731,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3848:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":734,"indexExpression":{"argumentTypes":null,"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3857:15:2","subExpression":{"argumentTypes":null,"id":732,"name":"disputesCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3859:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3848:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":735,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"3876:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_memory_ptr","typeString":"struct Arbitrage.Dispute memory"}},"src":"3848:35:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":737,"nodeType":"ExpressionStatement","src":"3848:35:2"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":739,"name":"disputesCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3916:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":740,"name":"_arbitrable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3937:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3956:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3956:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":743,"name":"_defendant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3974:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":744,"name":"_reasonHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"3992:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":738,"name":"DisputeRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3895:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,address,address,bytes32)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3895:109:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"3890:114:2"},{"expression":{"argumentTypes":null,"id":747,"name":"disputesCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4017:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":710,"id":748,"nodeType":"Return","src":"4010:20:2"}]},"documentation":"@dev raise dispute","id":750,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":707,"modifierName":{"argumentTypes":null,"id":706,"name":"whenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3576:10:2","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3576:10:2"}],"name":"raiseDispute","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"name":"_arbitrable","nodeType":"VariableDeclaration","scope":750,"src":"3466:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":700,"name":"_defendant","nodeType":"VariableDeclaration","scope":750,"src":"3491:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"3491:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":702,"name":"_reasonHash","nodeType":"VariableDeclaration","scope":750,"src":"3515:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":704,"name":"_resolutionHash","nodeType":"VariableDeclaration","scope":750,"src":"3540:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3540:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3460:104:2"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"name":"","nodeType":"VariableDeclaration","scope":750,"src":"3596:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3595:9:2"},"scope":967,"src":"3439:596:2","stateMutability":"nonpayable","superFunction":1197,"visibility":"public"},{"body":{"id":778,"nodeType":"Block","src":"4162:149:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":759,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4183:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":761,"indexExpression":{"argumentTypes":null,"id":760,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4192:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4183:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"id":762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"4183:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4216:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4216:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4183:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":766,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"4230:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":769,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4242:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4242:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4230:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4183:70:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523034","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4261:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""},"value":"AR04"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""}],"id":758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4168:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4168:100:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"4168:100:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":775,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4295:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"closeDisputeInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4274:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4274:32:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"ExpressionStatement","src":"4274:32:2"}]},"documentation":"@dev closing dispute","id":779,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":755,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"4148:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":756,"modifierName":{"argumentTypes":null,"id":754,"name":"whenDisputeActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4130:17:2","typeDescriptions":{"typeIdentifier":"t_modifier$_t_uint256_$","typeString":"modifier (uint256)"}},"nodeType":"ModifierInvocation","src":"4130:29:2"}],"name":"closeDispute","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"name":"_disputeId","nodeType":"VariableDeclaration","scope":779,"src":"4099:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4098:20:2"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"4162:0:2"},"scope":967,"src":"4077:234:2","stateMutability":"nonpayable","superFunction":1202,"visibility":"public"},{"body":{"id":822,"nodeType":"Block","src":"4491:262:2","statements":[{"assignments":[790],"declarations":[{"constant":false,"id":790,"name":"dispute","nodeType":"VariableDeclaration","scope":822,"src":"4497:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"},"typeName":{"contractScope":null,"id":789,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"4497:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}},"value":null,"visibility":"internal"}],"id":794,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":791,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4523:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":793,"indexExpression":{"argumentTypes":null,"id":792,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4532:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4523:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4497:46:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":796,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4557:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":506,"src":"4557:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4577:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4577:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4557:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":801,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"4591:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":804,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4603:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4603:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4591:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4557:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523034","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4616:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""},"value":"AR04"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b24a3323b5e4e9715107d33486f53b2c76b6352c4792a821a79bb169809e638b","typeString":"literal_string \"AR04\""}],"id":795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4549:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4549:74:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"ExpressionStatement","src":"4549:74:2"},{"expression":{"argumentTypes":null,"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":809,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4630:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"4630:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":812,"name":"_resolutionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4655:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4630:40:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":814,"nodeType":"ExpressionStatement","src":"4630:40:2"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":816,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4708:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":817,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4720:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4720:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":819,"name":"_resolutionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4732:15:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":815,"name":"DisputeResolutionSuggested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4681:26:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,bytes32)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4681:67:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"EmitStatement","src":"4676:72:2"}]},"documentation":"@dev suggest dispute resolution","id":823,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":786,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4477:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":787,"modifierName":{"argumentTypes":null,"id":785,"name":"whenDisputeActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4459:17:2","typeDescriptions":{"typeIdentifier":"t_modifier$_t_uint256_$","typeString":"modifier (uint256)"}},"nodeType":"ModifierInvocation","src":"4459:29:2"}],"name":"suggestDisputeResolution","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"_disputeId","nodeType":"VariableDeclaration","scope":823,"src":"4403:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4403:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":783,"name":"_resolutionHash","nodeType":"VariableDeclaration","scope":823,"src":"4427:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4427:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4397:54:2"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"4491:0:2"},"scope":967,"src":"4364:389:2","stateMutability":"nonpayable","superFunction":1209,"visibility":"public"},{"body":{"id":907,"nodeType":"Block","src":"4907:643:2","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"name":"dispute","nodeType":"VariableDeclaration","scope":907,"src":"4913:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"},"typeName":{"contractScope":null,"id":833,"name":"Dispute","nodeType":"UserDefinedTypeName","referencedDeclaration":515,"src":"4913:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute"}},"value":null,"visibility":"internal"}],"id":838,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":835,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4939:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":837,"indexExpression":{"argumentTypes":null,"id":836,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4948:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4939:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4913:46:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":840,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4980:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defendant","nodeType":"MemberAccess","referencedDeclaration":510,"src":"4980:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5001:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5001:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4980:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":845,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"5015:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":848,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5027:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5027:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5015:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4980:58:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523035","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5046:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_88f49a007462a8f5c4b6912382e01a4ff9fb7127b58c6507948c19eaa32c4b1a","typeString":"literal_string \"AR05\""},"value":"AR05"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_88f49a007462a8f5c4b6912382e01a4ff9fb7127b58c6507948c19eaa32c4b1a","typeString":"literal_string \"AR05\""}],"id":839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4965:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4965:88:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"4965:88:2"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":853,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5068:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrable","nodeType":"MemberAccess","referencedDeclaration":508,"src":"5068:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5098:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5090:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5090:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5068:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":859,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5104:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5104:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5130:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5104:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5068:63:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":894,"nodeType":"IfStatement","src":"5064:363:2","trueBody":{"id":893,"nodeType":"Block","src":"5133:294:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":866,"name":"_resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5159:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":865,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"5149:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":868,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5175:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5175:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5149:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523036","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5199:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_0158cd37ad52f152a836f3d3633306cf831be09006bd091708c07f8dbf865ea8","typeString":"literal_string \"AR06\""},"value":"AR06"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0158cd37ad52f152a836f3d3633306cf831be09006bd091708c07f8dbf865ea8","typeString":"literal_string \"AR06\""}],"id":864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"5141:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5141:65:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"5141:65:2"},{"assignments":[875],"declarations":[{"constant":false,"id":875,"name":"contractAddress","nodeType":"VariableDeclaration","scope":893,"src":"5214:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"5214:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":880,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":877,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5248:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"arbitrable","nodeType":"MemberAccess","referencedDeclaration":508,"src":"5248:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5240:27:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5214:53:2"},{"assignments":[882,null],"declarations":[{"constant":false,"id":882,"name":"success","nodeType":"VariableDeclaration","scope":893,"src":"5338:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":881,"name":"bool","nodeType":"ElementaryTypeName","src":"5338:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},null],"id":887,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":885,"name":"_resolution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5376:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":883,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"5355:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5355:20:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5355:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5337:51:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":889,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"5404:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523037","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5413:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e62d26531ec36bdea091d409ae715fe40ddd03adc753e3de980f4ba737faf803","typeString":"literal_string \"AR07\""},"value":"AR07"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e62d26531ec36bdea091d409ae715fe40ddd03adc753e3de980f4ba737faf803","typeString":"literal_string \"AR07\""}],"id":888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"5396:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5396:24:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"5396:24:2"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":896,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5460:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5472:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5472:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":899,"name":"dispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"5484:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage_ptr","typeString":"struct Arbitrage.Dispute storage pointer"}},"id":900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"resolutionHash","nodeType":"MemberAccess","referencedDeclaration":514,"src":"5484:22:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":895,"name":"DisputeResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5444:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,bytes32)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5444:63:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"EmitStatement","src":"5439:68:2"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":904,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5534:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"closeDisputeInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5513:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5513:32:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":906,"nodeType":"ExpressionStatement","src":"5513:32:2"}]},"documentation":null,"id":908,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":830,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4893:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":831,"modifierName":{"argumentTypes":null,"id":829,"name":"whenDisputeActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4875:17:2","typeDescriptions":{"typeIdentifier":"t_modifier$_t_uint256_$","typeString":"modifier (uint256)"}},"nodeType":"ModifierInvocation","src":"4875:29:2"}],"name":"resolveDispute","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"name":"_disputeId","nodeType":"VariableDeclaration","scope":908,"src":"4818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":827,"name":"_resolution","nodeType":"VariableDeclaration","scope":908,"src":"4838:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":826,"name":"bytes","nodeType":"ElementaryTypeName","src":"4838:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4817:46:2"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"4907:0:2"},"scope":967,"src":"4794:756:2","stateMutability":"nonpayable","superFunction":1216,"visibility":"public"},{"body":{"id":948,"nodeType":"Block","src":"5801:167:2","statements":[{"body":{"id":946,"nodeType":"Block","src":"5857:107:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":928,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5873:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":930,"indexExpression":{"argumentTypes":null,"id":929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5886:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5873:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5900:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5892:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5892:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5873:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"41523038","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5904:6:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4c4a1607932ff7766aad67124581d257ae149b0353a035e4dabf8951c05b92fb","typeString":"literal_string \"AR08\""},"value":"AR08"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c4a1607932ff7766aad67124581d257ae149b0353a035e4dabf8951c05b92fb","typeString":"literal_string \"AR08\""}],"id":927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"5865:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5865:46:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"5865:46:2"},{"expression":{"argumentTypes":null,"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":938,"name":"arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"5919:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":942,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":939,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5931:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":941,"indexExpression":{"argumentTypes":null,"id":940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5944:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5931:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5919:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":943,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"5950:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5919:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"ExpressionStatement","src":"5919:38:2"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5827:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":921,"name":"_arbitrators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5831:12:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5831:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5827:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"initializationExpression":{"assignments":[917],"declarations":[{"constant":false,"id":917,"name":"i","nodeType":"VariableDeclaration","scope":947,"src":"5812:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5812:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":919,"initialValue":{"argumentTypes":null,"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5824:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5812:13:2"},"loopExpression":{"expression":{"argumentTypes":null,"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5852:3:2","subExpression":{"argumentTypes":null,"id":924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5852:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"nodeType":"ExpressionStatement","src":"5852:3:2"},"nodeType":"ForStatement","src":"5807:157:2"}]},"documentation":"@dev update many third parties\n@param _arbitrators arbitrators to update\n@param _active whether the arbitrators are added or removed","id":949,"implemented":true,"kind":"function","modifiers":[],"name":"updateArbitrators","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"name":"_arbitrators","nodeType":"VariableDeclaration","scope":949,"src":"5741:29:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"5741:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":910,"length":null,"nodeType":"ArrayTypeName","src":"5741:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":913,"name":"_active","nodeType":"VariableDeclaration","scope":949,"src":"5772:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":912,"name":"bool","nodeType":"ElementaryTypeName","src":"5772:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5740:45:2"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"5801:0:2"},"scope":967,"src":"5714:254:2","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":965,"nodeType":"Block","src":"6078:86:2","statements":[{"expression":{"argumentTypes":null,"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6084:27:2","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":954,"name":"disputes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6091:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Dispute_$515_storage_$","typeString":"mapping(uint256 => struct Arbitrage.Dispute storage ref)"}},"id":956,"indexExpression":{"argumentTypes":null,"id":955,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6100:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6091:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Dispute_$515_storage","typeString":"struct Arbitrage.Dispute storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"6084:27:2"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":960,"name":"_disputeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6136:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"6148:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6148:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":959,"name":"DisputeClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6122:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6122:37:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"EmitStatement","src":"6117:42:2"}]},"documentation":"@dev closing dispute internal","id":966,"implemented":true,"kind":"function","modifiers":[],"name":"closeDisputeInternal","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"name":"_disputeId","nodeType":"VariableDeclaration","scope":966,"src":"6049:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6048:20:2"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"6078:0:2"},"scope":967,"src":"6019:145:2","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"}],"scope":968,"src":"1080:5086:2"}],"src":"0:6167:2"},"compiler":{"name":"solc","version":"0.5.3+commit.10d17f24.Emscripten.clang"},"networks":{},"schemaVersion":"3.0.1","updatedAt":"2019-02-11T13:01:12.749Z","devdoc":{"author":"Cyril Lapinte - <cyril.lapinte@mtpelerin.com>","details":"Arbitrage contract","methods":{"addArbitrators(address[])":{"details":"add third parties"},"closeDispute(uint256)":{"details":"closing dispute"},"constructor":{"details":"constructor"},"disputeArbitrable(uint256)":{"details":"dispute arbitrable"},"disputeClaimant(uint256)":{"details":"dispute claimant"},"disputeDefendant(uint256)":{"details":"dispute defendant"},"disputeRaisedAt(uint256)":{"details":"dispute raised at"},"disputeResolutionHash(uint256)":{"details":"dispute resolution hash"},"disputeStatus(uint256)":{"details":"disputeStatus"},"raiseDispute(address,address,bytes32,bytes32)":{"details":"raise dispute"},"removeArbitrators(address[])":{"details":"remove third parties"},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"repudiate()":{"details":"repudiate"},"suggestDisputeResolution(uint256,bytes32)":{"details":"suggest dispute resolution"},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"_newOwner":"The address to transfer ownership to."}}},"title":"Arbitrage"},"userdoc":{"methods":{},"notice":"Copyright © 2016 - 2019 Cyril Lapinte - All Rights ReservedThis content cannot be used, copied or reproduced in part or in wholewithout the express and written permission of Mt Pelerin Group SA.Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>All matters regarding the intellectual property of this code or softwareare subjects to Swiss Law without reference to its conflicts of law rules. * Error messages AR01: Contract must be active AR02: Dispute must be active AR03: Defendant cannot be null AR04: Message sender must be either the claimant or an arbitrator AR05: Message sender must be either the defendant or an arbitrator AR06: Resolution must match with the resolution hash AR07: Unable to execute contract operation AR08: Arbitrator address cannot be null"}};

/***/ }),

/***/ "./assets/Escrow.json":
/*!****************************!*\
  !*** ./assets/Escrow.json ***!
  \****************************/
/*! exports provided: contractName, abi, bytecode, deployedBytecode, sourceMap, deployedSourceMap, source, sourcePath, ast, legacyAST, compiler, networks, schemaVersion, updatedAt, devdoc, userdoc, default */
/***/ (function(module) {

module.exports = {"contractName":"Escrow","abi":[{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"payee","type":"address"},{"indexed":true,"name":"by","type":"address"},{"indexed":false,"name":"weiAmount","type":"uint256"}],"name":"DepositAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"payee","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"weiAmount","type":"uint256"}],"name":"DepositReverted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"payee","type":"address"},{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"weiAmount","type":"uint256"}],"name":"DepositReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"payee","type":"address"},{"indexed":false,"name":"weiAmount","type":"uint256"}],"name":"DepositWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"constant":true,"inputs":[{"name":"_payee","type":"address"}],"name":"depositReleased","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_payee","type":"address"},{"name":"_from","type":"address"}],"name":"depositLocked","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_payee","type":"address"}],"name":"addDeposit","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"_payee","type":"address"},{"name":"_amount","type":"uint256"}],"name":"releaseDeposit","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_payee","type":"address"},{"name":"_from","type":"address"},{"name":"_amount","type":"uint256"}],"name":"forceReleaseDeposit","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_payee","type":"address"},{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"revertDeposit","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_payee","type":"address"}],"name":"withdrawDeposit","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405260008054600160a060020a03191633179055610c10806100256000396000f3fe6080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900480639b7163f0116100765780639b7163f0146101be578063da42a96a14610203578063db8445f514610246578063dea0289214610281578063f2fde38b146102a7576100ae565b80630c303b18146100b357806351e417001461010a578063524dd0591461013d578063715018a6146101765780638da5cb5b1461018d575b600080fd5b3480156100bf57600080fd5b506100f6600480360360608110156100d657600080fd5b50600160a060020a038135811691602081013590911690604001356102da565b604080519115158252519081900360200190f35b34801561011657600080fd5b506100f66004803603602081101561012d57600080fd5b5035600160a060020a0316610453565b34801561014957600080fd5b506100f66004803603604081101561016057600080fd5b50600160a060020a03813516906020013561053c565b34801561018257600080fd5b5061018b610652565b005b34801561019957600080fd5b506101a26106f5565b60408051600160a060020a039092168252519081900360200190f35b3480156101ca57600080fd5b506101f1600480360360208110156101e157600080fd5b5035600160a060020a0316610704565b60408051918252519081900360200190f35b34801561020f57600080fd5b506100f66004803603606081101561022657600080fd5b50600160a060020a0381358116916020810135909116906040013561071f565b34801561025257600080fd5b506101f16004803603604081101561026957600080fd5b50600160a060020a038135811691602001351661088e565b61018b6004803603602081101561029757600080fd5b5035600160a060020a03166108ba565b3480156102b357600080fd5b5061018b600480360360208110156102ca57600080fd5b5035600160a060020a03166109f8565b60008054600160a060020a03163314610329576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b6000821161036d576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a038085166000908152600160208181526040808420948816845293909101905220546103a6908363ffffffff610a5216565b600160a060020a038086166000818152600160208181526040808420958a1684528583018252832095909555919052909152546103e9908363ffffffff610ab416565b600160a060020a0380861660008181526001602090815260409182902094909455805186815290519287169391927fa6cfab9bd506c2826cc560a5ae0378ac980675199ffe6a556876e8bdf54c6788929181900390910190a361044b84610453565b949350505050565b600160a060020a0381166000908152600160205260408120548181116104af576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a0383166000818152600160205260408082208290555183156108fc0291849190818181858888f193505050501580156104f3573d6000803e3d6000fd5b50604080518281529051600160a060020a038516917f4482101800a5c2e900f4156e57e05e19ffd7b366cde579553d723fd3abb2180e919081900360200190a250600192915050565b6000808211610581576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a038316600090815260016020818152604080842033855290920190529020546105b7908363ffffffff610a5216565b600160a060020a0384166000818152600160208181526040808420338552808401835290842095909555929091529052546105f8908363ffffffff610ab416565b600160a060020a038416600081815260016020908152604091829020939093558051858152905133937fa6cfab9bd506c2826cc560a5ae0378ac980675199ffe6a556876e8bdf54c6788928290030190a350600192915050565b600054600160a060020a031633146106a0576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600160a060020a031660009081526001602052604090205490565b60008054600160a060020a0316331461076e576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b600082116107b2576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a038085166000908152600160208181526040808420948816845293909101905220546107eb908363ffffffff610a5216565b600160a060020a038086166000908152600160208181526040808420948916845293820181528383209490945590925290205461082e908363ffffffff610ab416565b600160a060020a0380851660008181526001602090815260409182902094909455805186815290519193928816927fd59dcbec2107b41fcc58248bf4c5a2bb3e80f86822265e4a87d9447f028a93f992918290030190a361044b83610453565b600160a060020a0391821660009081526001602081815260408084209490951683529201909152205490565b600034116108fe576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a0381161515610960576040805160e560020a62461bcd028152602060048083019190915260248201527f4553303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a038116600090815260016020818152604080842033855290920190529020543490610998908263ffffffff610ab416565b600160a060020a0383166000818152600160208181526040808420338086529301825292839020949094558151858152915190937f63d8d7d5e63e9840ec91a12a160d27b7cfab294f6ba070b7359692acfe6b03bf928290030190a35050565b600054600160a060020a03163314610a46576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b610a4f81610b1a565b50565b600082821115610aae576040805160e560020a62461bcd028152602060048083019190915260248201527f534d303300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b600082820183811015610b13576040805160e560020a62461bcd028152602060048083019190915260248201527f534d303400000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0381161515610b7c576040805160e560020a62461bcd028152602060048083019190915260248201527f4f57303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820cc0be970126e272edab06d410534e820adc631dedaeb008ecdc8c81d8417287e0029","deployedBytecode":"0x6080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900480639b7163f0116100765780639b7163f0146101be578063da42a96a14610203578063db8445f514610246578063dea0289214610281578063f2fde38b146102a7576100ae565b80630c303b18146100b357806351e417001461010a578063524dd0591461013d578063715018a6146101765780638da5cb5b1461018d575b600080fd5b3480156100bf57600080fd5b506100f6600480360360608110156100d657600080fd5b50600160a060020a038135811691602081013590911690604001356102da565b604080519115158252519081900360200190f35b34801561011657600080fd5b506100f66004803603602081101561012d57600080fd5b5035600160a060020a0316610453565b34801561014957600080fd5b506100f66004803603604081101561016057600080fd5b50600160a060020a03813516906020013561053c565b34801561018257600080fd5b5061018b610652565b005b34801561019957600080fd5b506101a26106f5565b60408051600160a060020a039092168252519081900360200190f35b3480156101ca57600080fd5b506101f1600480360360208110156101e157600080fd5b5035600160a060020a0316610704565b60408051918252519081900360200190f35b34801561020f57600080fd5b506100f66004803603606081101561022657600080fd5b50600160a060020a0381358116916020810135909116906040013561071f565b34801561025257600080fd5b506101f16004803603604081101561026957600080fd5b50600160a060020a038135811691602001351661088e565b61018b6004803603602081101561029757600080fd5b5035600160a060020a03166108ba565b3480156102b357600080fd5b5061018b600480360360208110156102ca57600080fd5b5035600160a060020a03166109f8565b60008054600160a060020a03163314610329576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b6000821161036d576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a038085166000908152600160208181526040808420948816845293909101905220546103a6908363ffffffff610a5216565b600160a060020a038086166000818152600160208181526040808420958a1684528583018252832095909555919052909152546103e9908363ffffffff610ab416565b600160a060020a0380861660008181526001602090815260409182902094909455805186815290519287169391927fa6cfab9bd506c2826cc560a5ae0378ac980675199ffe6a556876e8bdf54c6788929181900390910190a361044b84610453565b949350505050565b600160a060020a0381166000908152600160205260408120548181116104af576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a0383166000818152600160205260408082208290555183156108fc0291849190818181858888f193505050501580156104f3573d6000803e3d6000fd5b50604080518281529051600160a060020a038516917f4482101800a5c2e900f4156e57e05e19ffd7b366cde579553d723fd3abb2180e919081900360200190a250600192915050565b6000808211610581576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a038316600090815260016020818152604080842033855290920190529020546105b7908363ffffffff610a5216565b600160a060020a0384166000818152600160208181526040808420338552808401835290842095909555929091529052546105f8908363ffffffff610ab416565b600160a060020a038416600081815260016020908152604091829020939093558051858152905133937fa6cfab9bd506c2826cc560a5ae0378ac980675199ffe6a556876e8bdf54c6788928290030190a350600192915050565b600054600160a060020a031633146106a0576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031681565b600160a060020a031660009081526001602052604090205490565b60008054600160a060020a0316331461076e576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b600082116107b2576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a038085166000908152600160208181526040808420948816845293909101905220546107eb908363ffffffff610a5216565b600160a060020a038086166000908152600160208181526040808420948916845293820181528383209490945590925290205461082e908363ffffffff610ab416565b600160a060020a0380851660008181526001602090815260409182902094909455805186815290519193928816927fd59dcbec2107b41fcc58248bf4c5a2bb3e80f86822265e4a87d9447f028a93f992918290030190a361044b83610453565b600160a060020a0391821660009081526001602081815260408084209490951683529201909152205490565b600034116108fe576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634553303102604482015290519081900360640190fd5b600160a060020a0381161515610960576040805160e560020a62461bcd028152602060048083019190915260248201527f4553303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a038116600090815260016020818152604080842033855290920190529020543490610998908263ffffffff610ab416565b600160a060020a0383166000818152600160208181526040808420338086529301825292839020949094558151858152915190937f63d8d7d5e63e9840ec91a12a160d27b7cfab294f6ba070b7359692acfe6b03bf928290030190a35050565b600054600160a060020a03163314610a46576040805160e560020a62461bcd0281526020600480830191909152602482015260e060020a634f57303102604482015290519081900360640190fd5b610a4f81610b1a565b50565b600082821115610aae576040805160e560020a62461bcd028152602060048083019190915260248201527f534d303300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b600082820183811015610b13576040805160e560020a62461bcd028152602060048083019190915260248201527f534d303400000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0381161515610b7c576040805160e560020a62461bcd028152602060048083019190915260248201527f4f57303200000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820cc0be970126e272edab06d410534e820adc631dedaeb008ecdc8c81d8417287e0029","sourceMap":"1350:3524:0:-;;;1184:5:3;:18;;-1:-1:-1;;;;;;1184:18:3;1192:10;1184:18;;;1350:3524:0;;;;;;","deployedSourceMap":"1350:3524:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3425:442;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3425:442:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3425:442:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4581:291;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4581:291:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4581:291:0;-1:-1:-1;;;;;4581:291:0;;:::i;2822:391::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2822:391:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2822:391:0;;;;;;;;:::i;1452:111:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1452:111:3;;;:::i;:::-;;855:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;855:20:3;;;:::i;:::-;;;;-1:-1:-1;;;;;855:20:3;;;;;;;;;;;;;;1930:118:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1930:118:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1930:118:0;-1:-1:-1;;;;;1930:118:0;;:::i;:::-;;;;;;;;;;;;;;;;4029:403;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4029:403:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4029:403:0;;;;;;;;;;;;;;;;;:::i;2052:142::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2052:142:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2052:142:0;;;;;;;;;;:::i;2327:325::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2327:325:0;-1:-1:-1;;;;;2327:325:0;;:::i;1725:103:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1725:103:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1725:103:3;-1:-1:-1;;;;;1725:103:3;;:::i;3425:442:0:-;3549:4;1336:5:3;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;3581:1:0;3571:11;;3563:28;;;;;-1:-1:-1;;;;;3563:28:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;3563:28:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;3634:17:0;;;;;;;:9;:17;;;;;;;;:41;;;;;:34;;;;:41;;;;:54;;3680:7;3634:54;:45;:54;:::i;:::-;-1:-1:-1;;;;;3597:17:0;;;;;;;:9;:17;;;;;;;;:34;;;;;:27;;;:34;;;;:91;;;;3726:17;;;;;;:36;:49;;3767:7;3726:49;:40;:49;:::i;:::-;-1:-1:-1;;;;;3694:17:0;;;;;;;:9;:17;;;;;;;;;:81;;;;3787:39;;;;;;;;;;;3694:17;;3787:39;;;;;;;;;;;3839:23;3855:6;3839:15;:23::i;:::-;3832:30;3425:442;-1:-1:-1;;;;3425:442:0:o;4581:291::-;-1:-1:-1;;;;;4675:17:0;;4646:4;4675:17;;;:9;:17;;;;;:29;4718:10;;;4710:27;;;;;-1:-1:-1;;;;;4710:27:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;4710:27:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;4744:17:0;;4776:1;4744:17;;;:9;:17;;;;;;:33;;;4784:23;;;;;;4800:6;;4784:23;;4776:1;4784:23;4800:6;4744:17;4784:23;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4818:32:0;;;;;;;;-1:-1:-1;;;;;4818:32:0;;;;;;;;;;;;;-1:-1:-1;4863:4:0;;4581:291;-1:-1:-1;;4581:291:0:o;2822:391::-;2899:4;2921:11;;;2913:28;;;;;-1:-1:-1;;;;;2913:28:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2913:28:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2989:17:0;;;;;;:9;:17;;;;;;;;3024:10;2989:46;;:34;;;:46;;;;;:59;;3040:7;2989:59;:50;:59;:::i;:::-;-1:-1:-1;;;;;2947:17:0;;;;;;:9;:17;;;;;;;;2975:10;2947:39;;:27;;;:39;;;;;:101;;;;3086:17;;;;;;:36;:49;;3127:7;3086:49;:40;:49;:::i;:::-;-1:-1:-1;;;;;3054:17:0;;;;;;:9;:17;;;;;;;;;:81;;;;3147:44;;;;;;;3171:10;;3147:44;;;;;;;;-1:-1:-1;3204:4:0;2822:391;;;;:::o;1452:111:3:-;1336:5;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;1528:5;;;1509:25;;-1:-1:-1;;;;;1528:5:3;;;;1509:25;;;1556:1;1540:18;;-1:-1:-1;;1540:18:3;;;1452:111::o;855:20::-;;;-1:-1:-1;;;;;855:20:3;;:::o;1930:118:0:-;-1:-1:-1;;;;;2014:17:0;1992:7;2014:17;;;:9;:17;;;;;:29;;1930:118::o;4029:403::-;4136:4;1336:5:3;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;4168:1:0;4158:11;;4150:28;;;;;-1:-1:-1;;;;;4150:28:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;4150:28:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;4219:17:0;;;;;;;:9;:17;;;;;;;;:39;;;;;:34;;;;:39;;;;:52;;4263:7;4219:52;:43;:52;:::i;:::-;-1:-1:-1;;;;;4184:17:0;;;;;;;:9;:17;;;;;;;;:32;;;;;:27;;;:32;;;;;:87;;;;4306:14;;;;;:26;:39;;4337:7;4306:39;:30;:39;:::i;:::-;-1:-1:-1;;;;;4277:14:0;;;;;;;:9;:14;;;;;;;;;:68;;;;4357:37;;;;;;;4277:14;;4357:37;;;;;;;;;;;;;4407:20;4423:3;4407:15;:20::i;2052:142::-;-1:-1:-1;;;;;2155:17:0;;;2131:7;2155:17;;;:9;:17;;;;;;;;:34;;;;;;:27;;:34;;;;;;2052:142::o;2327:325::-;2404:1;2392:9;:13;2384:30;;;;;-1:-1:-1;;;;;2384:30:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2384:30:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2428:20:0;;;;2420:37;;;;;-1:-1:-1;;;;;2420:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2537:17:0;;2463:14;2537:17;;;:9;:17;;;;;;;;2572:10;2537:46;;:34;;;:46;;;;;2480:9;;2537:58;;2480:9;2537:58;:50;:58;:::i;:::-;-1:-1:-1;;;;;2495:17:0;;;;;;:9;:17;;;;;;;;2523:10;2495:39;;;:27;;:39;;;;;;:100;;;;2607:40;;;;;;;2523:10;;2607:40;;;;;;;;2327:325;;:::o;1725:103:3:-;1336:5;;-1:-1:-1;;;;;1336:5:3;1322:10;:19;1314:36;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:36:3;;;;;;;;;;;;;;;1794:29;1813:9;1794:18;:29::i;:::-;1725:103;:::o;1855:139:1:-;1913:7;1936:6;;;;1928:23;;;;;-1:-1:-1;;;;;1928:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1969:5:1;;;1855:139::o;2069:::-;2127:7;2154:5;;;2173:6;;;;2165:23;;;;;-1:-1:-1;;;;;2165:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:1;2069:139;-1:-1:-1;;;2069:139:1:o;1963:179:3:-;-1:-1:-1;;;;;2033:23:3;;;;2025:40;;;;;-1:-1:-1;;;;;2025:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:5;;;2076:38;;-1:-1:-1;;;;;2076:38:3;;;;2097:5;;;2076:38;;;2120:5;:17;;-1:-1:-1;;2120:17:3;-1:-1:-1;;;;;2120:17:3;;;;;;;;;;1963:179::o","source":"pragma solidity ^0.5.3;\n\nimport \"./SafeMath.sol\";\nimport \"../implementation/Ownable.sol\";\n\n\n /**\n * @title Escrow\n * @dev Base escrow contract, holds funds designated for a payee until they\n * withdraw them.\n * @dev Intended usage: This contract (and derived escrow contracts) should be a\n * standalone contract, that only interacts with the contract that instantiated\n * it. That way, it is guaranteed that all Ether will be handled according to\n * the Escrow rules, and there is no need to check for payable functions or\n * transfers in the inheritance tree. The contract that uses the escrow as its\n * payment method should be its primary, and provide public methods redirecting\n * to the escrow's deposit and withdraw.\n *\n * @author Cyril Lapinte - <cyril.lapinte@mtpelerin.com>\n *\n * @notice Copyright © 2016 - 2019 Cyril Lapinte - All Rights Reserved\n * @notice This content cannot be used, copied or reproduced in part or in whole\n * @notice without the express and written permission of Mt Pelerin Group SA.\n * @notice Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>\n * @notice All matters regarding the intellectual property of this code or software\n * @notice are subjects to Swiss Law without reference to its conflicts of law rules.\n *\n * Error messages\n * ES01: Amount must be positive\n * ES02: Payee must not be address 0\n */\ncontract Escrow is Ownable {\n  using SafeMath for uint256;\n\n  event DepositAdded(\n    address indexed payee,\n    address indexed by,\n    uint256 weiAmount\n  );\n  event DepositReverted(\n    address indexed payee,\n    address indexed to,\n    uint256 weiAmount\n  );\n  event DepositReleased(\n    address indexed payee,\n    address indexed from,\n    uint256 weiAmount\n  );\n  event DepositWithdrawn(address indexed payee, uint256 weiAmount);\n\n  struct Deposit {\n    uint256 releasedWei;\n    mapping(address => uint256) lockedWei;\n  }\n  mapping(address => Deposit) private _deposits;\n\n  function depositReleased(address _payee) public view returns (uint256) {\n    return _deposits[_payee].releasedWei;\n  }\n\n  function depositLocked(address _payee, address _from)\n    public view returns (uint256)\n  {\n    return _deposits[_payee].lockedWei[_from];\n  }\n\n  /**\n   * @dev Stores the sent amount as credit to be withdrawn.\n   * @param _payee The destination address of the funds.\n   */\n  function addDeposit(address _payee) public payable {\n    require(msg.value > 0, \"ES01\");\n    require(_payee != address(0), \"ES02\");\n    uint256 amount = msg.value;\n    _deposits[_payee].lockedWei[msg.sender] = _deposits[_payee]\n      .lockedWei[msg.sender].add(amount);\n\n    emit DepositAdded(_payee, msg.sender, amount);\n  }\n\n  /**\n   * @dev Release the funds to the payee\n   * @param _payee The destination address of the funds.\n   * @param _amount The amount to released to the payee\n   */\n  function releaseDeposit(address _payee, uint256 _amount)\n    public returns (bool)\n  {\n    require(_amount > 0, \"ES01\");\n    _deposits[_payee].lockedWei[msg.sender] = _deposits[_payee]\n      .lockedWei[msg.sender].sub(_amount);\n    _deposits[_payee].releasedWei = _deposits[_payee]\n      .releasedWei.add(_amount);\n\n    emit DepositReleased(_payee, msg.sender, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Force the release of the funds to the payee\n   * @param _payee The destination address of the funds.\n   * @param _from The lock owner.\n   * @param _amount Amount of funds to be released\n   */\n  function forceReleaseDeposit(\n    address payable _payee,\n    address _from,\n    uint256 _amount) public onlyOwner returns (bool)\n  {\n    require(_amount > 0, \"ES01\");\n    _deposits[_payee].lockedWei[_from] = _deposits[_payee]\n      .lockedWei[_from].sub(_amount);\n    _deposits[_payee].releasedWei = _deposits[_payee]\n      .releasedWei.add(_amount);\n\n    emit DepositReleased(_payee, _from, _amount);\n    return withdrawDeposit(_payee);\n  }\n\n  /**\n   * @dev Revert the locked deposit to the lock owner.\n   * @param _payee The destination address of the funds.\n   * @param _payee The lock owner\n   */\n  function revertDeposit(address _payee, address payable _to, uint256 _amount)\n    public onlyOwner returns (bool)\n  {\n    require(_amount > 0, \"ES01\");\n    _deposits[_payee].lockedWei[_to] = _deposits[_payee]\n      .lockedWei[_to].sub(_amount);\n    _deposits[_to].releasedWei = _deposits[_to].releasedWei.add(_amount);\n\n    emit DepositReverted(_payee, _to, _amount);\n    return withdrawDeposit(_to);\n  }\n\n  /**\n   * @dev Withdraw accumulated balance for a payee.\n   * @param _payee The address whose funds will be withdrawn and transferred to.\n   */\n  function withdrawDeposit(address payable _payee) public returns (bool) {\n    uint256 amount = _deposits[_payee].releasedWei;\n    require(amount > 0, \"ES01\");\n\n    _deposits[_payee].releasedWei = 0;\n\n    _payee.transfer(amount);\n    emit DepositWithdrawn(_payee, amount);\n    return true;\n  }\n}\n","sourcePath":"/home/node/project/contracts/example/Escrow.sol","ast":{"absolutePath":"/home/node/project/contracts/example/Escrow.sol","exportedSymbols":{"Escrow":[356]},"id":357,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".3"],"nodeType":"PragmaDirective","src":"0:23:0"},{"absolutePath":"/home/node/project/contracts/example/SafeMath.sol","file":"./SafeMath.sol","id":2,"nodeType":"ImportDirective","scope":357,"sourceUnit":490,"src":"25:24:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/node/project/contracts/implementation/Ownable.sol","file":"../implementation/Ownable.sol","id":3,"nodeType":"ImportDirective","scope":357,"sourceUnit":1056,"src":"50:39:0","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":4,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":1055,"src":"1369:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$1055","typeString":"contract Ownable"}},"id":5,"nodeType":"InheritanceSpecifier","src":"1369:7:0"}],"contractDependencies":[1055],"contractKind":"contract","documentation":"@title Escrow\n@dev Base escrow contract, holds funds designated for a payee until they\nwithdraw them.\n@dev Intended usage: This contract (and derived escrow contracts) should be a\nstandalone contract, that only interacts with the contract that instantiated\nit. That way, it is guaranteed that all Ether will be handled according to\nthe Escrow rules, and there is no need to check for payable functions or\ntransfers in the inheritance tree. The contract that uses the escrow as its\npayment method should be its primary, and provide public methods redirecting\nto the escrow's deposit and withdraw.\n * @author Cyril Lapinte - <cyril.lapinte@mtpelerin.com>\n * @notice Copyright © 2016 - 2019 Cyril Lapinte - All Rights Reserved\n@notice This content cannot be used, copied or reproduced in part or in whole\n@notice without the express and written permission of Mt Pelerin Group SA.\n@notice Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>\n@notice All matters regarding the intellectual property of this code or software\n@notice are subjects to Swiss Law without reference to its conflicts of law rules.\n * Error messages\nES01: Amount must be positive\nES02: Payee must not be address 0","fullyImplemented":true,"id":356,"linearizedBaseContracts":[356,1055],"name":"Escrow","nodeType":"ContractDefinition","nodes":[{"id":8,"libraryName":{"contractScope":null,"id":6,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":489,"src":"1387:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$489","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1381:27:0","typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"anonymous":false,"documentation":null,"id":16,"name":"DepositAdded","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":16,"src":"1436:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"1436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12,"indexed":true,"name":"by","nodeType":"VariableDeclaration","scope":16,"src":"1463:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":14,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":16,"src":"1487:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1430:78:0"},"src":"1412:97:0"},{"anonymous":false,"documentation":null,"id":24,"name":"DepositReverted","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":24,"src":"1539:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":20,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":24,"src":"1566:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":22,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":24,"src":"1590:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1533:78:0"},"src":"1512:100:0"},{"anonymous":false,"documentation":null,"id":32,"name":"DepositReleased","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":32,"src":"1642:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":28,"indexed":true,"name":"from","nodeType":"VariableDeclaration","scope":32,"src":"1669:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":30,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":32,"src":"1695:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1636:80:0"},"src":"1615:102:0"},{"anonymous":false,"documentation":null,"id":38,"name":"DepositWithdrawn","nodeType":"EventDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":38,"src":"1743:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":36,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":38,"src":"1766:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1742:42:0"},"src":"1720:65:0"},{"canonicalName":"Escrow.Deposit","id":45,"members":[{"constant":false,"id":40,"name":"releasedWei","nodeType":"VariableDeclaration","scope":45,"src":"1810:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"1810:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":44,"name":"lockedWei","nodeType":"VariableDeclaration","scope":45,"src":"1835:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":43,"keyType":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1835:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"internal"}],"name":"Deposit","nodeType":"StructDefinition","scope":356,"src":"1789:88:0","visibility":"public"},{"constant":false,"id":49,"name":"_deposits","nodeType":"VariableDeclaration","scope":356,"src":"1880:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit)"},"typeName":{"id":48,"keyType":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1888:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1880:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit)"},"valueType":{"contractScope":null,"id":47,"name":"Deposit","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"1899:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage_ptr","typeString":"struct Escrow.Deposit"}}},"value":null,"visibility":"private"},{"body":{"id":61,"nodeType":"Block","src":"2001:47:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":56,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2014:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":58,"indexExpression":{"argumentTypes":null,"id":57,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2024:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":59,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"2014:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":55,"id":60,"nodeType":"Return","src":"2007:36:0"}]},"documentation":null,"id":62,"implemented":true,"kind":"function","modifiers":[],"name":"depositReleased","nodeType":"FunctionDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"name":"_payee","nodeType":"VariableDeclaration","scope":62,"src":"1955:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1954:16:0"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"name":"","nodeType":"VariableDeclaration","scope":62,"src":"1992:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"1992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1991:9:0"},"scope":356,"src":"1930:118:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":78,"nodeType":"Block","src":"2142:52:0","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":71,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2155:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":73,"indexExpression":{"argumentTypes":null,"id":72,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2165:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2155:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2155:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":76,"indexExpression":{"argumentTypes":null,"id":75,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2183:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2155:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2148:41:0"}]},"documentation":null,"id":79,"implemented":true,"kind":"function","modifiers":[],"name":"depositLocked","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"name":"_payee","nodeType":"VariableDeclaration","scope":79,"src":"2075:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":66,"name":"_from","nodeType":"VariableDeclaration","scope":79,"src":"2091:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2074:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"name":"","nodeType":"VariableDeclaration","scope":79,"src":"2131:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"2131:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2130:9:0"},"scope":356,"src":"2052:142:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":132,"nodeType":"Block","src":"2378:274:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2392:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2392:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2404:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2392:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":89,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2407:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":84,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"2384:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2384:30:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"2384:30:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":93,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2428:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2446:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":94,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2438:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2438:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2428:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533032","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2450:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b6c26882049280988ff6999b6408a5f98e8ededb9042f000cea550f78cefaf95","typeString":"literal_string \"ES02\""},"value":"ES02"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6c26882049280988ff6999b6408a5f98e8ededb9042f000cea550f78cefaf95","typeString":"literal_string \"ES02\""}],"id":92,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"2420:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2420:37:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"ExpressionStatement","src":"2420:37:0"},{"assignments":[102],"declarations":[{"constant":false,"id":102,"name":"amount","nodeType":"VariableDeclaration","scope":132,"src":"2463:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":105,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2480:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2480:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2463:26:0"},{"expression":{"argumentTypes":null,"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":106,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2495:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":108,"indexExpression":{"argumentTypes":null,"id":107,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2505:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2495:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2495:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":112,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":110,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2523:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2523:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2495:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":121,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2588:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":113,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2537:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":115,"indexExpression":{"argumentTypes":null,"id":114,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2547:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2537:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2537:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":119,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2572:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2572:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2537:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"2537:50:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2537:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:100:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":124,"nodeType":"ExpressionStatement","src":"2495:100:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":126,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2620:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2628:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2628:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2640:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":125,"name":"DepositAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2607:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"EmitStatement","src":"2602:45:0"}]},"documentation":"@dev Stores the sent amount as credit to be withdrawn.\n@param _payee The destination address of the funds.","id":133,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"name":"_payee","nodeType":"VariableDeclaration","scope":133,"src":"2347:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2346:16:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2378:0:0"},"scope":356,"src":"2327:325:0","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":190,"nodeType":"Block","src":"2907:306:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":143,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2921:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2931:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2921:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2934:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"2913:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2913:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"ExpressionStatement","src":"2913:28:0"},{"expression":{"argumentTypes":null,"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":149,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2947:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":151,"indexExpression":{"argumentTypes":null,"id":150,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2957:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2947:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2947:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":155,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2975:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2975:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2947:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":164,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3040:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":156,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2989:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":158,"indexExpression":{"argumentTypes":null,"id":157,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2999:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2989:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":162,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":160,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3024:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3024:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":442,"src":"2989:50:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2989:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2947:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":167,"nodeType":"ExpressionStatement","src":"2947:101:0"},{"expression":{"argumentTypes":null,"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":168,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3054:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":170,"indexExpression":{"argumentTypes":null,"id":169,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3064:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3054:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3054:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":177,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3127:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":172,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3086:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":174,"indexExpression":{"argumentTypes":null,"id":173,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3096:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3086:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3086:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"3086:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3086:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3054:81:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ExpressionStatement","src":"3054:81:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":182,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3163:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3171:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3171:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":185,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":181,"name":"DepositReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"3147:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3147:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":187,"nodeType":"EmitStatement","src":"3142:49:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3204:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":141,"id":189,"nodeType":"Return","src":"3197:11:0"}]},"documentation":"@dev Release the funds to the payee\n@param _payee The destination address of the funds.\n@param _amount The amount to released to the payee","id":191,"implemented":true,"kind":"function","modifiers":[],"name":"releaseDeposit","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"name":"_payee","nodeType":"VariableDeclaration","scope":191,"src":"2846:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":137,"name":"_amount","nodeType":"VariableDeclaration","scope":191,"src":"2862:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2845:33:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"name":"","nodeType":"VariableDeclaration","scope":191,"src":"2899:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"2899:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2898:6:0"},"scope":356,"src":"2822:391:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":251,"nodeType":"Block","src":"3557:310:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":205,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3571:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3581:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3571:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3584:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"3563:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"3563:28:0"},{"expression":{"argumentTypes":null,"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":211,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3597:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":213,"indexExpression":{"argumentTypes":null,"id":212,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3607:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3597:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"3597:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":216,"indexExpression":{"argumentTypes":null,"id":215,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3625:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3597:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":224,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":217,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3634:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":219,"indexExpression":{"argumentTypes":null,"id":218,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3644:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3634:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"3634:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":222,"indexExpression":{"argumentTypes":null,"id":221,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3669:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3634:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":442,"src":"3634:45:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3634:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3597:91:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":227,"nodeType":"ExpressionStatement","src":"3597:91:0"},{"expression":{"argumentTypes":null,"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":228,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3694:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":230,"indexExpression":{"argumentTypes":null,"id":229,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3704:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3694:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3694:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":237,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":232,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3726:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":234,"indexExpression":{"argumentTypes":null,"id":233,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3736:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3726:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3726:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"3726:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3726:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3694:81:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":240,"nodeType":"ExpressionStatement","src":"3694:81:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":242,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3803:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":243,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3811:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":244,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3818:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":241,"name":"DepositReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"3787:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3787:39:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"EmitStatement","src":"3782:44:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":248,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3855:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":247,"name":"withdrawDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"3839:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$returns$_t_bool_$","typeString":"function (address payable) returns (bool)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3839:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":203,"id":250,"nodeType":"Return","src":"3832:30:0"}]},"documentation":"@dev Force the release of the funds to the payee\n@param _payee The destination address of the funds.\n@param _from The lock owner.\n@param _amount Amount of funds to be released","id":252,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":200,"modifierName":{"argumentTypes":null,"id":199,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3530:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3530:9:0"}],"name":"forceReleaseDeposit","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"name":"_payee","nodeType":"VariableDeclaration","scope":252,"src":"3459:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"3459:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":195,"name":"_from","nodeType":"VariableDeclaration","scope":252,"src":"3487:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":197,"name":"_amount","nodeType":"VariableDeclaration","scope":252,"src":"3506:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3453:69:0"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"name":"","nodeType":"VariableDeclaration","scope":252,"src":"3549:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":201,"name":"bool","nodeType":"ElementaryTypeName","src":"3549:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"3548:6:0"},"scope":356,"src":"3425:442:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":312,"nodeType":"Block","src":"4144:288:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":266,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4168:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4158:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4171:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4150:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4150:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"4150:28:0"},{"expression":{"argumentTypes":null,"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":272,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4184:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":274,"indexExpression":{"argumentTypes":null,"id":273,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4194:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4184:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"4184:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":277,"indexExpression":{"argumentTypes":null,"id":276,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4212:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4184:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":285,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":278,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4219:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":280,"indexExpression":{"argumentTypes":null,"id":279,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4229:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4219:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"4219:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":283,"indexExpression":{"argumentTypes":null,"id":282,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4254:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4219:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":442,"src":"4219:43:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4219:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4184:87:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":288,"nodeType":"ExpressionStatement","src":"4184:87:0"},{"expression":{"argumentTypes":null,"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":289,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4277:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":291,"indexExpression":{"argumentTypes":null,"id":290,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4287:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4277:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4277:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":298,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4337:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":293,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4306:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":295,"indexExpression":{"argumentTypes":null,"id":294,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4316:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4306:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4306:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"4306:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4306:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4277:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":301,"nodeType":"ExpressionStatement","src":"4277:68:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":303,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4373:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":304,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4381:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":305,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4386:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":302,"name":"DepositReverted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4357:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4357:37:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":307,"nodeType":"EmitStatement","src":"4352:42:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":309,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4423:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":308,"name":"withdrawDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"4407:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$returns$_t_bool_$","typeString":"function (address payable) returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4407:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":264,"id":311,"nodeType":"Return","src":"4400:27:0"}]},"documentation":"@dev Revert the locked deposit to the lock owner.\n@param _payee The destination address of the funds.\n@param _payee The lock owner","id":313,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":261,"modifierName":{"argumentTypes":null,"id":260,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"4117:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"4117:9:0"}],"name":"revertDeposit","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"name":"_payee","nodeType":"VariableDeclaration","scope":313,"src":"4052:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":256,"name":"_to","nodeType":"VariableDeclaration","scope":313,"src":"4068:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"4068:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":258,"name":"_amount","nodeType":"VariableDeclaration","scope":313,"src":"4089:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4051:54:0"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"","nodeType":"VariableDeclaration","scope":313,"src":"4136:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4136:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4135:6:0"},"scope":356,"src":"4029:403:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":354,"nodeType":"Block","src":"4652:220:0","statements":[{"assignments":[321],"declarations":[{"constant":false,"id":321,"name":"amount","nodeType":"VariableDeclaration","scope":354,"src":"4658:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":326,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":322,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4675:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":324,"indexExpression":{"argumentTypes":null,"id":323,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4685:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4675:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4675:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4658:46:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":328,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4718:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4727:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4718:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4730:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4710:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4710:27:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4710:27:0"},{"expression":{"argumentTypes":null,"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":334,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4744:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":336,"indexExpression":{"argumentTypes":null,"id":335,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4754:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4744:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4744:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4776:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ExpressionStatement","src":"4744:33:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":344,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4800:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":341,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4784:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4784:15:0","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4784:23:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":346,"nodeType":"ExpressionStatement","src":"4784:23:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":348,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4835:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":349,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4843:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":347,"name":"DepositWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"4818:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4818:32:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"EmitStatement","src":"4813:37:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4863:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":319,"id":353,"nodeType":"Return","src":"4856:11:0"}]},"documentation":"@dev Withdraw accumulated balance for a payee.\n@param _payee The address whose funds will be withdrawn and transferred to.","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawDeposit","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"name":"_payee","nodeType":"VariableDeclaration","scope":355,"src":"4606:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4606:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"}],"src":"4605:24:0"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"name":"","nodeType":"VariableDeclaration","scope":355,"src":"4646:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":317,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4645:6:0"},"scope":356,"src":"4581:291:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":357,"src":"1350:3524:0"}],"src":"0:4875:0"},"legacyAST":{"absolutePath":"/home/node/project/contracts/example/Escrow.sol","exportedSymbols":{"Escrow":[356]},"id":357,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".3"],"nodeType":"PragmaDirective","src":"0:23:0"},{"absolutePath":"/home/node/project/contracts/example/SafeMath.sol","file":"./SafeMath.sol","id":2,"nodeType":"ImportDirective","scope":357,"sourceUnit":490,"src":"25:24:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/node/project/contracts/implementation/Ownable.sol","file":"../implementation/Ownable.sol","id":3,"nodeType":"ImportDirective","scope":357,"sourceUnit":1056,"src":"50:39:0","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":4,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":1055,"src":"1369:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$1055","typeString":"contract Ownable"}},"id":5,"nodeType":"InheritanceSpecifier","src":"1369:7:0"}],"contractDependencies":[1055],"contractKind":"contract","documentation":"@title Escrow\n@dev Base escrow contract, holds funds designated for a payee until they\nwithdraw them.\n@dev Intended usage: This contract (and derived escrow contracts) should be a\nstandalone contract, that only interacts with the contract that instantiated\nit. That way, it is guaranteed that all Ether will be handled according to\nthe Escrow rules, and there is no need to check for payable functions or\ntransfers in the inheritance tree. The contract that uses the escrow as its\npayment method should be its primary, and provide public methods redirecting\nto the escrow's deposit and withdraw.\n * @author Cyril Lapinte - <cyril.lapinte@mtpelerin.com>\n * @notice Copyright © 2016 - 2019 Cyril Lapinte - All Rights Reserved\n@notice This content cannot be used, copied or reproduced in part or in whole\n@notice without the express and written permission of Mt Pelerin Group SA.\n@notice Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>\n@notice All matters regarding the intellectual property of this code or software\n@notice are subjects to Swiss Law without reference to its conflicts of law rules.\n * Error messages\nES01: Amount must be positive\nES02: Payee must not be address 0","fullyImplemented":true,"id":356,"linearizedBaseContracts":[356,1055],"name":"Escrow","nodeType":"ContractDefinition","nodes":[{"id":8,"libraryName":{"contractScope":null,"id":6,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":489,"src":"1387:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$489","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1381:27:0","typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"anonymous":false,"documentation":null,"id":16,"name":"DepositAdded","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":16,"src":"1436:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"1436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":12,"indexed":true,"name":"by","nodeType":"VariableDeclaration","scope":16,"src":"1463:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":14,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":16,"src":"1487:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1430:78:0"},"src":"1412:97:0"},{"anonymous":false,"documentation":null,"id":24,"name":"DepositReverted","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":24,"src":"1539:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":20,"indexed":true,"name":"to","nodeType":"VariableDeclaration","scope":24,"src":"1566:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":22,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":24,"src":"1590:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1533:78:0"},"src":"1512:100:0"},{"anonymous":false,"documentation":null,"id":32,"name":"DepositReleased","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":32,"src":"1642:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":28,"indexed":true,"name":"from","nodeType":"VariableDeclaration","scope":32,"src":"1669:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":30,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":32,"src":"1695:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1636:80:0"},"src":"1615:102:0"},{"anonymous":false,"documentation":null,"id":38,"name":"DepositWithdrawn","nodeType":"EventDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"indexed":true,"name":"payee","nodeType":"VariableDeclaration","scope":38,"src":"1743:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":36,"indexed":false,"name":"weiAmount","nodeType":"VariableDeclaration","scope":38,"src":"1766:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1742:42:0"},"src":"1720:65:0"},{"canonicalName":"Escrow.Deposit","id":45,"members":[{"constant":false,"id":40,"name":"releasedWei","nodeType":"VariableDeclaration","scope":45,"src":"1810:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"1810:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":44,"name":"lockedWei","nodeType":"VariableDeclaration","scope":45,"src":"1835:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":43,"keyType":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1835:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"internal"}],"name":"Deposit","nodeType":"StructDefinition","scope":356,"src":"1789:88:0","visibility":"public"},{"constant":false,"id":49,"name":"_deposits","nodeType":"VariableDeclaration","scope":356,"src":"1880:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit)"},"typeName":{"id":48,"keyType":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1888:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1880:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit)"},"valueType":{"contractScope":null,"id":47,"name":"Deposit","nodeType":"UserDefinedTypeName","referencedDeclaration":45,"src":"1899:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage_ptr","typeString":"struct Escrow.Deposit"}}},"value":null,"visibility":"private"},{"body":{"id":61,"nodeType":"Block","src":"2001:47:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":56,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2014:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":58,"indexExpression":{"argumentTypes":null,"id":57,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2024:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2014:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":59,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"2014:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":55,"id":60,"nodeType":"Return","src":"2007:36:0"}]},"documentation":null,"id":62,"implemented":true,"kind":"function","modifiers":[],"name":"depositReleased","nodeType":"FunctionDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"name":"_payee","nodeType":"VariableDeclaration","scope":62,"src":"1955:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1954:16:0"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"name":"","nodeType":"VariableDeclaration","scope":62,"src":"1992:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"1992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1991:9:0"},"scope":356,"src":"1930:118:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":78,"nodeType":"Block","src":"2142:52:0","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":71,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2155:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":73,"indexExpression":{"argumentTypes":null,"id":72,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2165:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2155:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2155:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":76,"indexExpression":{"argumentTypes":null,"id":75,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2183:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2155:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2148:41:0"}]},"documentation":null,"id":79,"implemented":true,"kind":"function","modifiers":[],"name":"depositLocked","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"name":"_payee","nodeType":"VariableDeclaration","scope":79,"src":"2075:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"2075:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":66,"name":"_from","nodeType":"VariableDeclaration","scope":79,"src":"2091:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2074:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"name":"","nodeType":"VariableDeclaration","scope":79,"src":"2131:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"2131:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2130:9:0"},"scope":356,"src":"2052:142:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":132,"nodeType":"Block","src":"2378:274:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":85,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2392:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2392:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2404:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2392:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":89,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2407:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":84,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"2384:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2384:30:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"2384:30:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":93,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2428:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2446:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":94,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2438:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2438:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2428:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533032","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2450:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b6c26882049280988ff6999b6408a5f98e8ededb9042f000cea550f78cefaf95","typeString":"literal_string \"ES02\""},"value":"ES02"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6c26882049280988ff6999b6408a5f98e8ededb9042f000cea550f78cefaf95","typeString":"literal_string \"ES02\""}],"id":92,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"2420:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2420:37:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"ExpressionStatement","src":"2420:37:0"},{"assignments":[102],"declarations":[{"constant":false,"id":102,"name":"amount","nodeType":"VariableDeclaration","scope":132,"src":"2463:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":105,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2480:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2480:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2463:26:0"},{"expression":{"argumentTypes":null,"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":106,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2495:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":108,"indexExpression":{"argumentTypes":null,"id":107,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2505:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2495:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2495:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":112,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":110,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2523:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2523:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2495:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":121,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2588:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":113,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2537:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":115,"indexExpression":{"argumentTypes":null,"id":114,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2547:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2537:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2537:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":119,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2572:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2572:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2537:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"2537:50:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2537:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:100:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":124,"nodeType":"ExpressionStatement","src":"2495:100:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":126,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"2620:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2628:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2628:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2640:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":125,"name":"DepositAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2607:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"EmitStatement","src":"2602:45:0"}]},"documentation":"@dev Stores the sent amount as credit to be withdrawn.\n@param _payee The destination address of the funds.","id":133,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"name":"_payee","nodeType":"VariableDeclaration","scope":133,"src":"2347:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2346:16:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2378:0:0"},"scope":356,"src":"2327:325:0","stateMutability":"payable","superFunction":null,"visibility":"public"},{"body":{"id":190,"nodeType":"Block","src":"2907:306:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":143,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2921:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2931:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2921:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2934:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"2913:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2913:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"ExpressionStatement","src":"2913:28:0"},{"expression":{"argumentTypes":null,"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":149,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2947:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":151,"indexExpression":{"argumentTypes":null,"id":150,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2957:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2947:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2947:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":155,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2975:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2975:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2947:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":164,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3040:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":156,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2989:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":158,"indexExpression":{"argumentTypes":null,"id":157,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2999:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2989:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":162,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":160,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3024:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3024:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":442,"src":"2989:50:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2989:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2947:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":167,"nodeType":"ExpressionStatement","src":"2947:101:0"},{"expression":{"argumentTypes":null,"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":168,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3054:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":170,"indexExpression":{"argumentTypes":null,"id":169,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3064:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3054:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3054:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":177,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3127:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":172,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3086:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":174,"indexExpression":{"argumentTypes":null,"id":173,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3096:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3086:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3086:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"3086:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3086:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3054:81:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ExpressionStatement","src":"3054:81:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":182,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"3163:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3171:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3171:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":185,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":181,"name":"DepositReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"3147:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3147:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":187,"nodeType":"EmitStatement","src":"3142:49:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3204:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":141,"id":189,"nodeType":"Return","src":"3197:11:0"}]},"documentation":"@dev Release the funds to the payee\n@param _payee The destination address of the funds.\n@param _amount The amount to released to the payee","id":191,"implemented":true,"kind":"function","modifiers":[],"name":"releaseDeposit","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"name":"_payee","nodeType":"VariableDeclaration","scope":191,"src":"2846:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":137,"name":"_amount","nodeType":"VariableDeclaration","scope":191,"src":"2862:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2845:33:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"name":"","nodeType":"VariableDeclaration","scope":191,"src":"2899:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"2899:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2898:6:0"},"scope":356,"src":"2822:391:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":251,"nodeType":"Block","src":"3557:310:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":205,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3571:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3581:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3571:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3584:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"3563:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"3563:28:0"},{"expression":{"argumentTypes":null,"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":211,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3597:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":213,"indexExpression":{"argumentTypes":null,"id":212,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3607:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3597:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"3597:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":216,"indexExpression":{"argumentTypes":null,"id":215,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3625:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3597:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":224,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":217,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3634:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":219,"indexExpression":{"argumentTypes":null,"id":218,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3644:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3634:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"3634:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":222,"indexExpression":{"argumentTypes":null,"id":221,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3669:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3634:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":442,"src":"3634:45:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3634:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3597:91:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":227,"nodeType":"ExpressionStatement","src":"3597:91:0"},{"expression":{"argumentTypes":null,"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":228,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3694:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":230,"indexExpression":{"argumentTypes":null,"id":229,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3704:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3694:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3694:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":237,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":232,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3726:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":234,"indexExpression":{"argumentTypes":null,"id":233,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3736:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3726:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"3726:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"3726:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3726:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3694:81:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":240,"nodeType":"ExpressionStatement","src":"3694:81:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":242,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3803:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":243,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3811:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":244,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3818:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":241,"name":"DepositReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"3787:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3787:39:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"EmitStatement","src":"3782:44:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":248,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3855:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":247,"name":"withdrawDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"3839:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$returns$_t_bool_$","typeString":"function (address payable) returns (bool)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3839:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":203,"id":250,"nodeType":"Return","src":"3832:30:0"}]},"documentation":"@dev Force the release of the funds to the payee\n@param _payee The destination address of the funds.\n@param _from The lock owner.\n@param _amount Amount of funds to be released","id":252,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":200,"modifierName":{"argumentTypes":null,"id":199,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3530:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"3530:9:0"}],"name":"forceReleaseDeposit","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"name":"_payee","nodeType":"VariableDeclaration","scope":252,"src":"3459:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"3459:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":195,"name":"_from","nodeType":"VariableDeclaration","scope":252,"src":"3487:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":197,"name":"_amount","nodeType":"VariableDeclaration","scope":252,"src":"3506:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3506:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3453:69:0"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"name":"","nodeType":"VariableDeclaration","scope":252,"src":"3549:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":201,"name":"bool","nodeType":"ElementaryTypeName","src":"3549:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"3548:6:0"},"scope":356,"src":"3425:442:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":312,"nodeType":"Block","src":"4144:288:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":266,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4168:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4158:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4171:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4150:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4150:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"4150:28:0"},{"expression":{"argumentTypes":null,"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":272,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4184:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":274,"indexExpression":{"argumentTypes":null,"id":273,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4194:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4184:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"4184:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":277,"indexExpression":{"argumentTypes":null,"id":276,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4212:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4184:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":285,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":278,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4219:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":280,"indexExpression":{"argumentTypes":null,"id":279,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4229:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4219:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lockedWei","nodeType":"MemberAccess","referencedDeclaration":44,"src":"4219:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":283,"indexExpression":{"argumentTypes":null,"id":282,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4254:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4219:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":442,"src":"4219:43:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4219:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4184:87:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":288,"nodeType":"ExpressionStatement","src":"4184:87:0"},{"expression":{"argumentTypes":null,"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":289,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4277:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":291,"indexExpression":{"argumentTypes":null,"id":290,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4287:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4277:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4277:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":298,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4337:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":293,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4306:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":295,"indexExpression":{"argumentTypes":null,"id":294,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4316:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4306:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4306:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":467,"src":"4306:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4306:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4277:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":301,"nodeType":"ExpressionStatement","src":"4277:68:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":303,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"4373:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":304,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4381:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":305,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"4386:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":302,"name":"DepositReverted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4357:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4357:37:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":307,"nodeType":"EmitStatement","src":"4352:42:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":309,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4423:3:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":308,"name":"withdrawDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"4407:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$returns$_t_bool_$","typeString":"function (address payable) returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4407:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":264,"id":311,"nodeType":"Return","src":"4400:27:0"}]},"documentation":"@dev Revert the locked deposit to the lock owner.\n@param _payee The destination address of the funds.\n@param _payee The lock owner","id":313,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":261,"modifierName":{"argumentTypes":null,"id":260,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"4117:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"4117:9:0"}],"name":"revertDeposit","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"name":"_payee","nodeType":"VariableDeclaration","scope":313,"src":"4052:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":256,"name":"_to","nodeType":"VariableDeclaration","scope":313,"src":"4068:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"4068:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"},{"constant":false,"id":258,"name":"_amount","nodeType":"VariableDeclaration","scope":313,"src":"4089:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"4089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4051:54:0"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"name":"","nodeType":"VariableDeclaration","scope":313,"src":"4136:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4136:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4135:6:0"},"scope":356,"src":"4029:403:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":354,"nodeType":"Block","src":"4652:220:0","statements":[{"assignments":[321],"declarations":[{"constant":false,"id":321,"name":"amount","nodeType":"VariableDeclaration","scope":354,"src":"4658:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":326,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":322,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4675:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":324,"indexExpression":{"argumentTypes":null,"id":323,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4685:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4675:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4675:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4658:46:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":328,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4718:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4727:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4718:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"45533031","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4730:6:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""},"value":"ES01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70626c4ca814ed46436d3d3ae66fa9d53d3d3755b83644904d539bc4d50ba48c","typeString":"literal_string \"ES01\""}],"id":327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[1450,1451],"referencedDeclaration":1451,"src":"4710:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4710:27:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4710:27:0"},{"expression":{"argumentTypes":null,"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":334,"name":"_deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"4744:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Deposit_$45_storage_$","typeString":"mapping(address => struct Escrow.Deposit storage ref)"}},"id":336,"indexExpression":{"argumentTypes":null,"id":335,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4754:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4744:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$45_storage","typeString":"struct Escrow.Deposit storage ref"}},"id":337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"releasedWei","nodeType":"MemberAccess","referencedDeclaration":40,"src":"4744:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4776:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4744:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ExpressionStatement","src":"4744:33:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":344,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4800:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":341,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4784:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4784:15:0","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4784:23:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":346,"nodeType":"ExpressionStatement","src":"4784:23:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":348,"name":"_payee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4835:6:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":349,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4843:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":347,"name":"DepositWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"4818:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4818:32:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"EmitStatement","src":"4813:37:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4863:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":319,"id":353,"nodeType":"Return","src":"4856:11:0"}]},"documentation":"@dev Withdraw accumulated balance for a payee.\n@param _payee The address whose funds will be withdrawn and transferred to.","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawDeposit","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"name":"_payee","nodeType":"VariableDeclaration","scope":355,"src":"4606:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4606:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"}],"src":"4605:24:0"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"name":"","nodeType":"VariableDeclaration","scope":355,"src":"4646:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":317,"name":"bool","nodeType":"ElementaryTypeName","src":"4646:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4645:6:0"},"scope":356,"src":"4581:291:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"}],"scope":357,"src":"1350:3524:0"}],"src":"0:4875:0"},"compiler":{"name":"solc","version":"0.5.3+commit.10d17f24.Emscripten.clang"},"networks":{},"schemaVersion":"3.0.1","updatedAt":"2019-02-11T13:01:12.745Z","devdoc":{"author":"Cyril Lapinte - <cyril.lapinte@mtpelerin.com>","details":"Base escrow contract, holds funds designated for a payee until they withdraw them.Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the Escrow rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its primary, and provide public methods redirecting to the escrow's deposit and withdraw.","methods":{"addDeposit(address)":{"details":"Stores the sent amount as credit to be withdrawn.","params":{"_payee":"The destination address of the funds."}},"forceReleaseDeposit(address,address,uint256)":{"details":"Force the release of the funds to the payee","params":{"_amount":"Amount of funds to be released","_from":"The lock owner.","_payee":"The destination address of the funds."}},"releaseDeposit(address,uint256)":{"details":"Release the funds to the payee","params":{"_amount":"The amount to released to the payee","_payee":"The destination address of the funds."}},"renounceOwnership()":{"details":"Allows the current owner to relinquish control of the contract."},"revertDeposit(address,address,uint256)":{"details":"Revert the locked deposit to the lock owner.","params":{"_payee":"The lock owner"}},"transferOwnership(address)":{"details":"Allows the current owner to transfer control of the contract to a newOwner.","params":{"_newOwner":"The address to transfer ownership to."}},"withdrawDeposit(address)":{"details":"Withdraw accumulated balance for a payee.","params":{"_payee":"The address whose funds will be withdrawn and transferred to."}}},"title":"Escrow"},"userdoc":{"methods":{},"notice":"Copyright © 2016 - 2019 Cyril Lapinte - All Rights ReservedThis content cannot be used, copied or reproduced in part or in wholewithout the express and written permission of Mt Pelerin Group SA.Written by *Cyril Lapinte, <cyril.lapinte@mtpelerin.com>All matters regarding the intellectual property of this code or softwareare subjects to Swiss Law without reference to its conflicts of law rules. * Error messages ES01: Amount must be positive ES02: Payee must not be address 0"}};

/***/ }),

/***/ "./assets/images/download-metamask.png":
/*!*********************************************!*\
  !*** ./assets/images/download-metamask.png ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "./images/download-metamask.png";

/***/ }),

/***/ "./assets/registry.json":
/*!******************************!*\
  !*** ./assets/registry.json ***!
  \******************************/
/*! exports provided: 0xd0fdeebd7015bbfd41e700bd679863c80dd9ebf8, 0x16c2d7ae7b600a8788e3352a80dd0da0aa8815c5, 0x78afbee6f1693d16d1b61bA9425b736F19706858, 0xCEe80ff1B8DB005C2DC93bE318c3152462799544, 0xfcd8c91f6a6ba476ced166ef6389783df3162b81, default */
/***/ (function(module) {

module.exports = {"0xd0fdeebd7015bbfd41e700bd679863c80dd9ebf8":"Alice","0x16c2d7ae7b600a8788e3352a80dd0da0aa8815c5":"Bob","0x78afbee6f1693d16d1b61bA9425b736F19706858":"Escrow","0xCEe80ff1B8DB005C2DC93bE318c3152462799544":"Arbitrage","0xfcd8c91f6a6ba476ced166ef6389783df3162b81":"Arbiter1"};

/***/ }),

/***/ "./css/main.css":
/*!**********************!*\
  !*** ./css/main.css ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js!./main.css */ "./node_modules/css-loader/dist/cjs.js!./css/main.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./css/main.css":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./css/main.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "\nhtml {\n    height: 100%;\n}\n\nbody {\n    font-size: 1.5vw; \n    height: 100%;;\n }\n\n#setup {\n    height: 100%;\n}\n\ninput.nameInput.form-control {\n    flex: 1 5 100px;\n}\n\ninput.addressInput.form-control {\n    flex: 5 1 auto;\n}\n\n#metamask {\n    text-align: center;\n    width: 100%;\n    display: none;\n\n    font-size: calc(12px + 1.25vw);\n    padding: 75px 10px 10px 10px;\n}\n\n#metamask img {\n    width: calc(100px + 40vw);\n}\n\n.setupContainer {\n    margin: 75px 10px 10px 20px;\n    display: none;\n}\n\nspan.fa.fa-check-circle {\n    font-size: 20px;\n}\n\n.setupContainer .spinner-border {\n    width: 1.2rem;\n    height: 1.2rem;\n}\n\n#contractSelection .row {\n    padding: 15px;\n}\n\n#participantsDefinition {\n    display: none;\n}\n\n#contractSetup {\n    display: none;\n}\n\n#navParticipant {\n    display: none;\n}\n\n#navArbitrator {\n    display: none;\n}\n\n.navParticipant {\n    background-color: darkblue;\n}\n\n.navParticipant a {\n    color: #dbdbff;\n}\n\n.statusParticipant {\n    border-left: blue solid 1px;    \n    border-top: blue solid 1px;    \n    border-right: darkblue solid 1px;    \n    border-bottom: darkblue solid 1px;    \n    text-align: center;\n    margin: 20px 0px;\n}\n\n.participantTab.selected {\n    background-color: #dbdbff;\n    color: darkred;\n}\n\n.navArbitrator {\n    background-color: darkred;\n}\n\n.navArbitrator a {\n    color: #ffdbdb;\n}\n\n.table th {\n   font-size: 1.8vw; \n}\n\n.table td {\n    text-align: center;\n    font-size: 1.6vw;\n}\n\n.table th {\n    background-color: darkblue;\n    color: #dbdbff;\n    padding: 2px;\n    text-transform: capitalize;\n    font-weight: normal;\n    text-align: center;\n    border: 1px solid white;\n}\n\n.contact {\n    min-width: 120px !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.description {\n    text-align: left !important;\n}\n\n.about {\n    padding: 20px;\n    width: 100%;\n    text-align: center;\n}\n\n.arbitration th {\n    background-color: darkred !important;\n    color: #ffdbdb;\n}\n\n@media screen and (min-width: 800px) {\n    .table {\n        font-size: 18px; \n     }\n  }", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "./src/dispute.js":
/*!************************!*\
  !*** ./src/dispute.js ***!
  \************************/
/*! exports provided: isDisputeOpenBetween, disputeInit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDisputeOpenBetween", function() { return isDisputeOpenBetween; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disputeInit", function() { return disputeInit; });
/* harmony import */ var _modules_ethereum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/ethereum */ "./src/modules/ethereum.js");
/* harmony import */ var _escrow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./escrow */ "./src/escrow.js");




const EMPTY_ADDRESS = '0x0000000000000000000000000000000000000000';
const EMPTY_HASH = '0x0000000000000000000000000000000000000000000000000000000000000000';

let currentParticipant = {
  address: '',
  balance: 0,
  disputes: [],
  history: [],
  isArbitor: false
};

let loadingPromise;
function afterLoading() {
  if(!loadingPromise) {
    disputeInit();
  }
  return loadingPromise;
}

async function loadMetamask() {
  return _modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["metamaskLoading"].then((account) => {
    if(account) {
      currentParticipant.address = account.address;
      document.getElementById("arbitrageAddress").innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(account.address, true);
      let balance = web3.fromWei(account.balance, 'ether');
      currentParticipant.balance = balance.round(3).toString();
    }
  });
}

async function loadArbitrage() {
  let arbitrage = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Arbitrage').instance;
  return Promise.all([ new Promise((resolve, reject) => {
    arbitrage.arbitrators(currentParticipant.address, (error, isArbitor) => {
      if(error) {
        console.error(error);
        reject(error);
        return;
      }

      currentParticipant.isArbitor = isArbitor;
      resolve(isArbitor);
    })
  }), new Promise((resolve, reject) => {
    let promises = [];
    let events = arbitrage.allEvents({ fromBlock: 4990000, toBlock: 'latest' });
    events.get(function (error, data) {
      if (data) {
        let history = [];
        let requests = 0;
        let disputeItems = { };
        data.forEach(event => {
          let disputeId = event.args.disputeId;
          let author = (event.args.author) ? event.args.author : event.args.claimant;
          disputeItems[disputeId] = { }
          let item = {
            block: event.blockNumber,
            transactionHash: event.transactionHash,
            event: event.event,
            disputeId: event.args.disputeId,
            author: author,
            claimant: event.args.claimant,
            defendant: event.args.defendant,
            arbitrable: event.args.arbitrable,
            resolutionHash: event.args.resolutionHash,
          };
          history.push(item);
          requests++;
          promises.push(web3.eth.getBlock(item.block, (error, data) => {
            if(data) {
              item.timestamp = data.timestamp * 1000;
            } else  {
              console.error(error);
            }
            requests--;
            if(requests == 0) {
              currentParticipant.history = history;
              createArbitrageHistory();
            }
          }));
        });
      } else {
        console.error(error);
      }
      resolve(data);
    })
  }), new Promise((resolve, reject) => {
    arbitrage.disputesCount((error, disputesCount) => {
      if(disputesCount > 0) {
        let batch = web3.createBatch();
        let activeDisputeIds = [];
        for(var i=0; i < disputesCount; i++) {
          let id = i+1;
          batch.add(arbitrage.disputeStatus.request(id, (err, data) => {
            activeDisputeIds[id-1] = data;
            if(activeDisputeIds.length == disputesCount) {
              resolve(activeDisputeIds);
            }
          }));
        }
        batch.execute();
      } else {
        if(!error) {
          resolve([]);
        } else {
          console.error(error);
          reject(error);
        }
      }
    })
  }).then((activeDisputeIds) => {
    let disputes = [];
    let unresolved = 0;

    return new Promise((resolve, reject) => {
      let batch = web3.createBatch();
      let resolveIfLoaded = ((dispute) => {
        dispute.request--;
        if(dispute.request == 0) {
          unresolved--;
        }
        if(unresolved == 0)  {
          resolve();
        }
      });

      activeDisputeIds.forEach((status, i) => {
        if(status == 0) {
          unresolved++;
          let dispute = {
            id: i+1,
            request: 5
          };
          disputes.push(dispute);
          batch.add(arbitrage.disputeClaimant.request(dispute.id, (err, data) => {
            dispute.claimant = data;
            resolveIfLoaded(dispute);
          }));
          batch.add(arbitrage.disputeArbitrable.request(dispute.id, (err, data) => {
            dispute.arbitrable = data;
            resolveIfLoaded(dispute);
          }));
          batch.add(arbitrage.disputeDefendant.request(dispute.id, (err, data) => {
            dispute.defendant = data;
            resolveIfLoaded(dispute);
          }));
          batch.add(arbitrage.disputeRaisedAt.request(dispute.id, (err, data) => {
            dispute.raisedAt = data;
            resolveIfLoaded(dispute);
          }));
          batch.add(arbitrage.disputeResolutionHash.request(dispute.id, (err, data) => {
            dispute.resolutionHash = data;
            resolveIfLoaded(dispute);
          }));
        }
      });
      if(unresolved > 0) {
        batch.execute();
      } else {
        resolve();  
      }
    }).then(() => {
      currentParticipant.disputes = disputes;
      createArbitraageToDoList();
    })
  }) ]);
}

function createArbitraageToDoList() {
  var tableBody = document.createElement('tbody');

  let promise = Promise.resolve();
  if(currentParticipant.isArbitor) {
    let addresses = [];
    currentParticipant.disputes.forEach(dispute => {
      if(addresses.indexOf(dispute.claimant) == -1) {
        addresses.push(dispute.claimant);
      }
      if(addresses.indexOf(dispute.defendant) == -1) {
        addresses.push(dispute.defendant);
      }
    })
    promise = Object(_escrow__WEBPACK_IMPORTED_MODULE_1__["loadAllLockedDeposits"])(addresses);
  }

  promise.then((allLockedDeposits) => {
    currentParticipant.disputes.forEach((dispute, index) => {
      var row = document.createElement('tr');
  
      // id
      var cellId = document.createElement('td');
      cellId.appendChild(document.createTextNode(dispute.id));
      row.appendChild(cellId);
  
      // Arbitrable
      var cell = document.createElement('td');
      if(dispute.arbitrable != EMPTY_ADDRESS)  {
        cell.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.arbitrable, true);
        row.appendChild(cell);
      } else {
        cell.innerHTML = 'Not Enforceable';
        row.appendChild(cell);
      }
  
      // Claimmant
      var cell = document.createElement('td');
      cell.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.claimant, true);
      row.appendChild(cell);
  
      // Defendant
      var cell = document.createElement('td');
      cell.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.defendant, true);
      row.appendChild(cell);
  
      var cell = document.createElement('td');
      if(currentParticipant.isArbitor || currentParticipant.address == dispute.claimant || currentParticipant.address == dispute.defendant) {
        cell.innerHTML = '<button type="submit" class="btn btn-info" onclick="showDisputeForm(\'suggestResolution\','+index+')"><span class="fa fa-file"></span> Suggest</button>';
      }
  
      if(currentParticipant.isArbitor || currentParticipant.address == dispute.claimant) {
        cell.innerHTML += ' <button type="submit" class="btn btn-danger" onclick="showDisputeForm(\'closeDispute\', '+index+')"><span class="fa fa-times"></span> Close</button>';
      }
      row.appendChild(cell);
      tableBody.appendChild(row);
  
      if(dispute.resolutionHash != EMPTY_HASH) {
        cellId.setAttribute('rowspan', '2');
  
        var row = document.createElement('tr');
  
        var cell = document.createElement('td');
        cell.id = 'recoveredCell';
        cell.setAttribute('colspan', '3');
        Object(_escrow__WEBPACK_IMPORTED_MODULE_1__["recoverResolutionHash"])(allLockedDeposits, dispute, dispute.resolutionHash).then((recovered) => {
          var cell = document.getElementById('recoveredCell');
          if(recovered) {
            let amount = web3.fromWei(recovered.amount, 'ether');
            if(recovered.method == 'release') {
              cell.innerHTML = '<b>Resolution</b> to release ' + amount + ' ETH  to ' + Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(recovered.payee, true);
            } else {
              cell.innerHTML = '<b>Resolution</b> to revert ' + amount + ' ETH back to ' + Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(recovered.payer, true);
            }
          } else {
            cell.innerHTML = 'Resolution Hash ' + Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenHash"])(dispute.resolutionHash);
          }
        });
        row.appendChild(cell);
        
        var cell = document.createElement('td');
        cell.appendChild(document.createTextNode(dispute.id));
        cell.innerHTML = '<button type="submit" class="btn btn-success" onclick="showDisputeForm(\'resolveDispute\', '+index+')"><span class="fa fa-gavel"></span> Resolve</button>';
        row.appendChild(cell);
      }
  
      tableBody.appendChild(row);
    });
    var row = document.createElement('tr');
    var cell = document.createElement('td');
    cell.setAttribute("colspan", "5");
    cell.innerHTML = '<button type="submit" class="btn btn-primary float-right" onclick="showDisputeForm(\'raiseDispute\', 0)">Raise dispute <span class="fa fa-flag"></span></button>';
    row.appendChild(cell);
    tableBody.appendChild(row);
  
    document.getElementById("arbitrageToDoBody").innerHTML = tableBody.innerHTML;
  });
}

function createArbitrageHistory() {
  var tableBody = document.createElement('tbody');

  currentParticipant.history.forEach(function (event) {
    var row = document.createElement('tr');

    // Date
    var cell = document.createElement('td');
    let date = new Date(event.timestamp).toLocaleDateString();
    cell.appendChild(document.createTextNode(date));
    row.appendChild(cell);

    // Id
    var cell = document.createElement('td');
    cell.appendChild(document.createTextNode(event.disputeId));
    row.appendChild(cell);

    // Event
    var cell = document.createElement('td');
    let eventName = '-';
    let description = '-';
    switch (event.event) {
      case 'DisputeRaised':
        eventName = 'Raised';
        if(event.arbitrable != '0x0000000000000000000000000000000000000000') {
          description = 'on contract '+Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(event.arbitrable, true);
        }
        break;
      case 'DisputeClosed':
        eventName = 'Closed';
        break;
      case 'DisputeResolutionSuggested':
        eventName = 'Suggestion';
        break;
      case 'DisputeResolved':
        eventName = 'Resolution';
        break;
      case 'DisputeInterrupted':
        eventName = 'Interruption';
        break;
      case 'DisputeResumed':
        eventName = 'Resumed';
        break;
    }
    cell.appendChild(document.createTextNode(eventName));
    row.appendChild(cell);

    // Author
    var cell = document.createElement('td');
    if (event.author) {
      cell.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(event.author, true);
    } else {
      cell.innerHTML = '-';
    }
    row.appendChild(cell);

    // Description
    var cell = document.createElement('td');
    cell.innerHTML = description;
    cell.classList.add('description');
    row.appendChild(cell);

    tableBody.appendChild(row);
  });
  document.getElementById("arbitrageHistoryBody").innerHTML = tableBody.innerHTML;
}


function hideAllDisputeForms() {
  var depositForm = document.getElementById("raiseDisputeForm");
  depositForm.style.display = "none";

  var releaseForm = document.getElementById("closeDisputeForm");
  releaseForm.style.display = "none";

  var disputeForm = document.getElementById("suggestResolutionForm");
  disputeForm.style.display = "none";

  var disputeForm = document.getElementById("resolveDisputeForm");
  disputeForm.style.display = "none";

  var deposits = document.getElementById("activeDisputes");
  deposits.style.display = "block";

  var depositsHistory = document.getElementById("disputeHistory");
  depositsHistory.style.display = "block";

  return false;
}

function showDisputeForm(name, index) {
  currentParticipant.selectedAction = name;
  currentParticipant.selectedDispute = index;

  var activeDisputes = document.getElementById("activeDisputes");
  activeDisputes.style.display = "none";

  var disputeHistory = document.getElementById("disputeHistory");
  disputeHistory.style.display = "none";

  var dispute = currentParticipant.disputes[index];

  switch(name) {
    case "raiseDispute":
      var raiseDisputeForm = document.getElementById("raiseDisputeForm");
      raiseDisputeForm.style.display = "block";
      break;
    case "suggestResolution":
      var suggestDisputeId = document.getElementById("suggestDisputeId");
      suggestDisputeId.innerHTML = dispute.id;

      var suggestResolutionForm = document.getElementById("suggestResolutionForm");
      suggestResolutionForm.style.display = "block";

      var suggestArbitrable = document.getElementById("suggestArbitrable");
      suggestArbitrable.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.arbitrable, true);

      var suggestClaimant = document.getElementById("suggestClaimant");
      suggestClaimant.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.claimant, true);

      var suggestDefendant = document.getElementById("suggestDefendant");
      suggestDefendant.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.defendant, true);

      var suggestResolutionHash = document.getElementById("suggestResolutionHash");
      if (dispute.resolutionHash.startsWith('0x')) {
        suggestResolutionHash.value = dispute.resolutionHash.substring(2);
      } else {
        suggestResolutionHash.value = dispute.resolutionHash;
      }
      break;
    case "closeDispute":
      var closeDisputeId = document.getElementById("closeDisputeId");
      closeDisputeId.innerHTML = dispute.id;

      var closeArbitrable = document.getElementById("closeArbitrable");
      closeArbitrable.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.arbitrable, true);

      var closeClaimant = document.getElementById("closeClaimant");
      closeClaimant.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.claimant, true);

      var closeDefendant = document.getElementById("closeDefendant");
      closeDefendant.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.defendant, true);

      var closeDisputeForm = document.getElementById("closeDisputeForm");
      closeDisputeForm.style.display = "block";
      break;
    case "resolveDispute":
      var closeDisputeId = document.getElementById("resolveDisputeId");
      closeDisputeId.innerHTML = dispute.id;

      var resolveArbitrable = document.getElementById("resolveArbitrable");
      resolveArbitrable.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.arbitrable, true);

      var resolveClaimant = document.getElementById("resolveClaimant");
      resolveClaimant.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.claimant, true);

      var resolveDefendant = document.getElementById("resolveDefendant");
      resolveDefendant.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(dispute.defendant, true);

      var resolveRsolutionHash = document.getElementById("resolveResolutionHash");
      if (dispute.resolutionHash.startsWith('0x')) {
        resolveRsolutionHash.value = dispute.resolutionHash.substring(2);
      } else {
        resolveRsolutionHash.value = dispute.resolutionHash;
      }

      var resolveDisputeForm = document.getElementById("resolveDisputeForm");
      resolveDisputeForm.style.display = "block";
      break;
  }
  return false;
}

function actionRaiseDispute() {
  let arbitrable = document.getElementById("arbitrable").value;
  let defendant = document.getElementById("defendant").value;
  let reasonHash = document.getElementById("disputeReasonHash").innerHTML;
  let resolutionHash = web3.sha3('');
  let arbitrage = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Arbitrage').instance;

  if(arbitrable) {
    if(!arbitrable.startsWith('0x')) {
      arbitrable = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["lookupName"])(arbitrable);
    }
    if(arbitrable.length == 40) {
      arbitrable = '0x' + arbitrable;
    }
  }

  if(defendant) {
    if(!defendant.startsWith('0x')) {
      defendant = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["lookupName"])(defendant);
    }
    if(defendant.length == 40) {
      defendant = '0x' + defendant;
    }
  }

  let arbitrableValid = arbitrable.length == 42 && arbitrable.startsWith('0x');
  let defendantValid = defendant.length == 42 && defendant.startsWith('0x');
  let reasonHashValid = reasonHash.length == 66 && reasonHash.startsWith('0x');

  if (arbitrableValid && defendantValid && reasonHashValid) {
    arbitrage.raiseDispute(arbitrable, defendant, reasonHash, resolutionHash, (err, data) => {
      if (data) {
        console.log(data);
        hideAllDisputeForms();
      } else {
        console.error(err);
      }
    });
  } else  {    
    console.error("Invalid parameters (depositTo="+depositToValid+", amount="+amountValid+")");
  }
  return false;
}

function actionSuggestResolution() {
  var dispute = currentParticipant.disputes[currentParticipant.selectedDispute];
  let arbitrage = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Arbitrage').instance;
  
  let resolutionHash = document.getElementById("suggestResolutionHash").value;
  if(resolutionHash) {
    if(!resolutionHash.startsWith('0x')) {
      resolutionHash = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["lookupName"])(resolutionHash);
    }
    if(resolutionHash.length == 64) {
      resolutionHash = '0x' + resolutionHash;
    }
  }

  let resolutionHashValid = resolutionHash.length == 66 && resolutionHash.startsWith('0x');

  if (resolutionHashValid) {
    arbitrage.suggestDisputeResolution(dispute.id, resolutionHash, (err, data) => {
      if(data) {
        console.log(data);
        hideAllDisputeForms();
      } else {
        console.error(err);
      }
    })
  } else {
    console.error("Invalid parameters (resolutionHash: "+resolutionHashValid+")");
  }
  return false;
}

function actionCloseDispute() {
  var dispute = currentParticipant.disputes[currentParticipant.selectedDispute];
  let arbitrage = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Arbitrage').instance;

  arbitrage.closeDispute(dispute.id, (err, data) => {
    if(data) {
      console.log(data);
      hideAllDisputeForms();
    } else {
      console.error(err);
    }
  });
  return false;
}

function actionResolveDispute() {
  var dispute = currentParticipant.disputes[currentParticipant.selectedDispute];
  let arbitrage = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Arbitrage').instance;

  let resolutionHash = document.getElementById("resolveResolutionHash").value;
  if(resolutionHash) {
    if(resolutionHash.length == 64) {
      resolutionHash = '0x' + resolutionHash;
    }
  }

  arbitrage.resolveDispute(dispute.id, resolutionHash, (err, data) => {
    if(data) {
      console.log(data);
      hideAllDisputeForms();
    } else {
      console.error(err);
    }
  })
  return false;
}

async function isDisputeOpenBetween(addressA, addressB) {
  return afterLoading().then(() => {
    let result = false;
    currentParticipant.disputes.forEach((dispute) => {
      result = result
        || (dispute.claimant == addressA && dispute.defendant == addressB)
        || (dispute.claimant == addressB && dispute.defendant == addressA);
    });
    return result;
  });
}

function disputeInit() {
  if(window.ethereum && !loadingPromise) {
    loadingPromise = new Promise(async function(resolve, reject) {
      if (document.readyState === "complete") { 
        console.log('loading dispute...');
        await loadMetamask();
        await loadArbitrage();
        resolve();
      } else {
        window.addEventListener('load', async () => {
          console.log('loading dispute...');
          await loadMetamask();
          await loadArbitrage();
          resolve();
        });
      }
    });
  
    loadingPromise.then(() => {
      if(currentParticipant.isArbitor) {
        var navArbitrator = document.getElementById('navArbitrator');
        navArbitrator.style.display = 'block';
    
        var participant = document.getElementById('participant');
        participant.classList.remove('show');
        participant.classList.remove('active');
    
        var arbitrageTab = document.getElementById('arbitrage');
        arbitrageTab.classList.add("show", "active")
      } else {
        var navParticipant = document.getElementById('navParticipant');
        navParticipant.style.display = 'block';
  
        var participant = document.getElementById('participant');
        participant.classList.add("show", "active")
  
        var arbitrageTab = document.getElementById('arbitrage');
        arbitrageTab.classList.remove('show');
        arbitrageTab.classList.remove('active');

        console.log(currentParticipant);
        console.log("arbitrage loading finished!");
      }
    });
  }

  return loadingPromise;
}

window.showDisputeForm = showDisputeForm;
window.hideAllDisputeForms = hideAllDisputeForms;
window.actionRaiseDispute = actionRaiseDispute;
window.actionSuggestResolution = actionSuggestResolution;
window.actionCloseDispute = actionCloseDispute;
window.actionResolveDispute = actionResolveDispute;
window.disputeLoaded = true;




/***/ }),

/***/ "./src/escrow.js":
/*!***********************!*\
  !*** ./src/escrow.js ***!
  \***********************/
/*! exports provided: recoverResolutionHash, loadAllLockedDeposits, escrowInit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recoverResolutionHash", function() { return recoverResolutionHash; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadAllLockedDeposits", function() { return loadAllLockedDeposits; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escrowInit", function() { return escrowInit; });
/* harmony import */ var _modules_ethereum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/ethereum */ "./src/modules/ethereum.js");
/* harmony import */ var _dispute__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dispute */ "./src/dispute.js");




const EMPTY_HASH = '0x0000000000000000000000000000000000000000000000000000000000000000';

let currentParticipant = {
  address: '', 
  balance: 0,
  withdrawable: 0,
  lockedDeposits: [],
  selectedDeposit: 0,
  selectedAction: '',
  selectedAmount: 0,
  history: [],
};

let loadingPromise;

function loadMetamask() {
  return _modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["metamaskLoading"].then((account) => {
    if(account) {
      currentParticipant.address = account.address;
      document.getElementById("address").innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(account.address, true);
      let balance = web3.fromWei(account.balance, 'ether');
      currentParticipant.balance = balance.round(3).toString();
    }
  });
}

async function loadEscrow() {
  let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Escrow').instance;
  return new Promise((resolve, reject) => {
    let events = escrow.allEvents({ fromBlock: 4990000, toBlock: 'latest' });
    let promises = [];
    events.get(function(error, data) {
      if(!error) {
        let lockedAddresses = [];
        let history = [];
        data.forEach(event => {
          let from = event.args.from;
          if(!event.args.from && event.args.by) {
            from = event.args.by;
          }

          let item = {
            block: event.blockNumber,
            transactionHash: event.transactionHash,
            event: event.event,
            from: from,
            to: event.args.payee,
            amount: event.args.weiAmount,
            disputed: false
          };

          if (event.event == 'DepositAdded'
            && lockedAddresses.indexOf(event.args.payee) == -1) {
            lockedAddresses.push(event.args.payee);
          }
          history.push(item);
        });
        currentParticipant.history = history.sort( (a, b) => (b.block - a.block));
        if(lockedAddresses.length > 0) {
          promises.push(loadLockedDeposits(currentParticipant.address, lockedAddresses).then((result) => {
            currentParticipant.lockedDeposits = result;
            let promisesLockedDeposits = [];
            currentParticipant.lockedDeposits.forEach((deposit) => {
              promisesLockedDeposits.push(Object(_dispute__WEBPACK_IMPORTED_MODULE_1__["isDisputeOpenBetween"])(currentParticipant.address, deposit.address).then(result => {
                deposit.disputed = result;
              }));
            });

            return Promise.all(promisesLockedDeposits).then(() => {
              createTodoList();
            });
          }));
        }
        let requests = currentParticipant.history.length;
        currentParticipant.history.forEach((item) => {
          promises.push(web3.eth.getBlock(item.block, (error, data) => {
            if(data) {
              item.timestamp = data.timestamp * 1000;
            } else  {
              console.error(error);
            }
            requests--;
            if(requests == 0) {
              createEscrowHistory();
            }
          }));
        });
      } else {
        console.error(error);
      }
      Promise.all(promises).then(() => {
        resolve(data);
      });
    });
  }).then(() => {
    if(currentParticipant.address) {
      escrow.depositReleased(currentParticipant.address, (err, data) => {
        if (data) {
          currentParticipant.withdrawable = data.toString();
        } else {
          console.error(err);
        }
      });
    }
  });
}

function loadAllLockedDeposits(lockedRecipients) {
  let promises = [];
  lockedRecipients.forEach((address) => {
    let addresses = lockedRecipients.filter(x => x != address);
    promises.push(loadLockedDeposits(address, addresses));
  })
  return Promise.all(promises).then((resultArray) => {
    if(resultArray) {
      resultArray = resultArray.flatMap(result => result);
    }
    return resultArray;
  });
}

function loadLockedDeposits(participantAddress, lockedRecipients) {
  let result = [];
  return new Promise((resolve) => {
    let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Escrow').instance;
    var batch = web3.createBatch();
    lockedRecipients.forEach(address => {
      let item = {
        participant: participantAddress, 
        address: address,
        requests: 2
      };
      result.push(item);
      batch.add(escrow.depositLocked.request(participantAddress, address, (err, data) => {
        if(data) {
          item.their = data;
        } else {
          console.error(err);
        }
        item.requests--;
        if(item.requests == 0 && result.length == lockedRecipients.length) {
          resolve(result);
        }
      }));
      batch.add(escrow.depositLocked.request(address, participantAddress, (err, data) => {
        if(data) {
          item.ours = data;
        } else {
          console.error(err);
        }
        item.requests--;
        if(item.requests == 0 && result.length == lockedRecipients.length) {
          resolve(result);
        }
      }));
    });
    batch.execute();
  }).then(() => {
    return result.filter(x => x.their > 0 || x.ours > 0);
  });
}

function createTodoList() {
  var todoListDiv = document.createElement('div');

 if(currentParticipant.withdrawable > 0) {
    let escrowWithdraw = document.getElementById('escrowWithdraw');
    escrowWithdraw.innerHTML = '<p>You currently have '+
      web3.fromWei(currentParticipant.withdrawable, 'ether')+
    ' ETH to '+
    '<a href="javascript:actionWithdraw()" data-toggle="tooltip" title="Withdraw">'+
    'Withdraw <span class="fa fa-arrow-circle-down"></span></a>.</p>';
  }

  let escrowPosition = document.createElement('tbody');
  currentParticipant.lockedDeposits.forEach((item, i) => {
    var row = document.createElement('tr');

    if(item.disputed) {
      row.classList.add('bg-warning');
    }

    var cell = document.createElement('td');
    cell.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(item.address, true);
    row.appendChild(cell);

    var cell = document.createElement('td');
    let their = web3.fromWei(item.their, 'ether');
    cell.appendChild(document.createTextNode(their + ' ETH'));
    cell.classList.add('amount');
    row.appendChild(cell);

    var cell = document.createElement('td');
    let ours = web3.fromWei(item.ours, 'ether');
    cell.appendChild(document.createTextNode(ours + ' ETH'));
    cell.classList.add('amount');
    row.appendChild(cell);

    var cell = document.createElement('td');
    cell.innerHTML = '';
    if(!item.disputed) {
      if(item.their > 0) {
        cell.innerHTML += '<button type="submit" class="btn btn-warning" onclick="showEscrowForm(\'dispute\', '+i+')"><span class="fa fa-flag"></span> Dispute</button>';
      }
      if(item.ours > 0) {
        if(item.their > 0) {
          cell.innerHTML += '&nbsp;';
        }
        cell.innerHTML += '<button type="submit" class="btn btn-success" onclick="showEscrowForm(\'release\', '+i+')"><span class="fa fa-unlock-alt"></span> Release</button>';
      }
    } else {
      cell.innerHTML = 'Disputed <span class="fa fa-flag"></span>';
    }
    row.appendChild(cell);

    escrowPosition.appendChild(row);
  });

  var row = document.createElement('tr');
  row.innerHTML = '<tr><td colspan="3"></td><td><button type="submit" class="btn btn-primary" onclick="showEscrowForm(\'deposit\', 0)"><span class="fa fa-upload"></span>&nbsp;<span>Deposit</span></button></td></tr>';
  escrowPosition.appendChild(row);
  
  document.getElementById('escrowCurrentPosition').innerHTML = escrowPosition.innerHTML;
}

function createEscrowHistory() {
  var tableBody = document.createElement('tbody');

  currentParticipant.history.forEach(function(event) {
    var row = document.createElement('tr');

    // Date
    var cell = document.createElement('td');
    let date = new Date(event.timestamp).toLocaleDateString();
    cell.appendChild(document.createTextNode(date));
    row.appendChild(cell);

    // Event
    var cell = document.createElement('td');
    let eventName = '-';
    switch(event.event) {
      case 'DepositAdded':
        eventName = 'Deposit';
        break;
      case 'DepositReleased':
        eventName = 'Release';
        break;
      case 'DepositWithdrawn':
        eventName = 'Withdraw';
        break;
      case 'OwnershipTransferred':
        eventName = 'New Owner';
        break;
    }
    cell.appendChild(document.createTextNode(eventName));
    row.appendChild(cell);

    // From
    var cell = document.createElement('td');
    if (event.from) {
      cell.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(event.from, true);
    } else {
      cell.appendChild(document.createTextNode('-'));
    }
    row.appendChild(cell);

    // To
    var cell = document.createElement('td');
    if (event.to) {
      cell.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(event.to, true);
    } else {
      cell.appendChild(document.createTextNode('-'));
    }
    row.appendChild(cell);

    // Amount
    var cell = document.createElement('td');
    if(event.amount > 0) {
      cell.appendChild(document.createTextNode(web3.fromWei(event.amount, 'ether') + ' ETH'));
      cell.classList.add('amount');  
    } else {
      cell.appendChild(document.createTextNode('-'));
    }
    row.appendChild(cell);

    tableBody.appendChild(row);
  });
  document.getElementById("escrowHistoryBody").innerHTML = tableBody.innerHTML;
}

function actionDeposit() {
  let amount = document.getElementById("depositAmount").value;
  let depositTo = document.getElementById("depositTo").value;

  let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Escrow').instance;

  if(depositTo) {
    if(!depositTo.startsWith('0x')) {
      depositTo = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["lookupName"])(depositTo);
    }
    if(depositTo.length == 40) {
      depositTo = '0x' + depositTo;
    }
  }
  let depositToValid = depositTo.length == 42 && depositTo.startsWith('0x');
  let amountValid = currentParticipant.balance >= amount && amount > 0;

  if (depositToValid && amountValid) {
    escrow.addDeposit( depositTo, { from: currentParticipant.address, value: web3.toWei( amount, 'ether') }, (err, data) => {
      if (data) {
        console.log(data);
        hideAllEscrowForms();
      } else {
        console.log(err);
      }
    });
  } else  {    
    console.error("Invalid parameters (depositTo="+depositToValid+", amount="+amountValid+")");
  }
  return false;
}

function actionWithdraw() {
  let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Escrow').instance;  
  escrow.withdrawDeposit( currentParticipant.address, { from: currentParticipant.address }, (err, data) => {
    if (data) {
      console.log(data);
    } else {
      console.log(err);
    }
  })
}

function actionRelease() {
  let amount = currentParticipant.selectedAmount;
  let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Escrow').instance;  

  var deposit = currentParticipant.lockedDeposits[currentParticipant.selectedDeposit];
  var address = deposit.address;

  var amountValid = amount > 0;

  if(amountValid) {
    escrow.releaseDeposit( address, amount, { from: currentParticipant.address }, (err, data) => {
      if (data) {
        console.log(data);
        hideAllEscrowForms();
      } else {
        console.log(err);
      }
    });
  } else {
    console.error("Invalid data (amountValid="+amountValid+")");
  }
  return false;
}

function actionRaiseEscrowDispute() {
  var deposit = currentParticipant.lockedDeposits[currentParticipant.selectedDeposit];
  let amount = currentParticipant.selectedAmount;

  let arbitrage = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Arbitrage').instance;
  let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Escrow').instance;

  var reasonHash = document.getElementById("escrowReasonHash").innerHTML;

  let resolution = '';
  switch(document.getElementById("escrowRequestSelect").value) {
    case 'Release':
      resolution = escrow.forceReleaseDeposit.getData(deposit.address, currentParticipant.address, amount);
      break;
    case 'Revert':
      resolution = escrow.revertDeposit.getData(deposit.address, currentParticipant.address, amount);
      break;
  }

  let resolutionHash = web3.sha3(resolution, { encoding: 'hex'});

  let reasonHashValid = reasonHash.length == 66 && reasonHash.startsWith('0x');
  let resolutionHashValid = resolutionHash.length == 66 && resolutionHash.startsWith('0x');
  if(reasonHashValid && resolutionHashValid) {
    arbitrage.raiseDispute(escrow.address, deposit.address, reasonHash, resolutionHash, (err, data) => {
      if (data) {
        console.log(data);
        hideAllEscrowForms();
      } else {
        console.log(err);
      }
    });
  } else {
    console.error("Invalid parameters (reasonHash: "+reasonHashValid+", resolutionHash: "+resolutionHashValid+"")
  }
  return false;
}

function hideAllEscrowForms() {
  var depositForm = document.getElementById("depositForm");
  depositForm.style.display = "none";

  var releaseForm = document.getElementById("releaseForm");
  releaseForm.style.display = "none";

  var disputeForm = document.getElementById("disputeForm");
  disputeForm.style.display = "none";

  var deposits = document.getElementById("deposits");
  deposits.style.display = "block";

  var depositsHistory = document.getElementById("depositsHistory");
  depositsHistory.style.display = "block";

  return false;
}

function showEscrowForm(name, index) {
  currentParticipant.selectedAction = name;
  currentParticipant.selectedDeposit = index;

  var deposits = document.getElementById("deposits");
  deposits.style.display = "none";

  var depositsHistory = document.getElementById("depositsHistory");
  depositsHistory.style.display = "none";

  switch(name) {
    case "deposit":
      var depositForm = document.getElementById("depositForm");
      depositForm.style.display = "block";
      break;
    case "release":
      var releaseForm = document.getElementById("releaseForm");
      releaseForm.style.display = "block";
      displayETHSlider('releaseSlider', 'releaseAmount');

      var lockedDeposit = currentParticipant.lockedDeposits[currentParticipant.selectedDeposit];
      var recipient = document.getElementById('releaseRecipient');
      recipient.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(lockedDeposit.address, true);
      break;
    case "dispute":
      var disputeForm = document.getElementById("disputeForm");
      disputeForm.style.display = "block";
      displayETHSlider('disputeSlider', 'disputeAmount');
      buildDisputeHash('reasonHashArea', 'escrowReasonHash');

      var lockedDeposit = currentParticipant.lockedDeposits[currentParticipant.selectedDeposit];
      var recipient = document.getElementById('disputeRecipient');
      recipient.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["shortenAddress"])(lockedDeposit.address, true);
      break;
  }
}

function escrowRequestSelection(event) {
  return displayETHSlider('disputeSlider', 'disputeAmount')
}

function displayETHSlider(id, idDisplay) {
  let value = document.getElementById(id).value;

  let lockedDeposit = currentParticipant.lockedDeposits[currentParticipant.selectedDeposit];
  if(lockedDeposit && currentParticipant.selectedAction == 'release') {
    var releaseAmount = document.getElementById(idDisplay);
    var amount = Math.round(value * lockedDeposit.ours / 100);
    currentParticipant.selectedAmount = amount;
    releaseAmount.innerHTML = web3.fromWei(amount, 'ether') + ' ETH';
  }
  if(lockedDeposit && currentParticipant.selectedAction == 'dispute') {
    var selectedAction = document.getElementById('escrowRequestSelect');
    var releaseAmount = document.getElementById(idDisplay);
    var lockedValue = (selectedAction.value == 'Release') ? lockedDeposit.their : lockedDeposit.ours;
    var amount = Math.round(value * lockedValue / 100);
    currentParticipant.selectedAmount = amount;
    releaseAmount.innerHTML = web3.fromWei(amount, 'ether') + ' ETH';
  }
}

function buildDisputeHash(input, label) {
  var reasonHashArea = document.getElementById(input);
  var reasonHash = document.getElementById(label);
  if(reasonHashArea.value) {
    reasonHash.innerHTML = web3.sha3(reasonHashArea.value);
  } else {
    reasonHash.innerHTML = EMPTY_HASH;
  }
}

function goTo(tag) {
  var arbitrageTab = document.getElementById('arbitrage-tab');
  var participantTab = document.getElementById('participant-tab');
  var aboutTab = document.getElementById('about-tab');

  var arbitrage = document.getElementById('arbitrage');
  var participant = document.getElementById('participant');
  var about = document.getElementById('about');
  
  var participant = document.getElementById('participant');
  participant.style.display = 'none';
  participant.style.opacity = 0;
  var arbitrage = document.getElementById('arbitrage');
  arbitrage.style.display = 'none';
  arbitrage.style.opacity = 0;
  var about = document.getElementById('about');
  about.style.display = 'none';
  about.style.opacity = 0;

  participantTab.classList.remove('selected');
  participantTab.classList.remove('active');
  arbitrageTab.classList.remove('selected');
  arbitrageTab.classList.remove('active');
  aboutTab.classList.remove('selected');
  aboutTab.classList.remove('active');
  
  switch(tag) {
    case 'participant':
      var participant = document.getElementById('participant');
      participant.style.display = 'block';
      participant.style.opacity = 1;
      participantTab.classList.add(['selected', 'active']);
      break;
    case 'arbitrage':
      var arbitrage = document.getElementById('arbitrage');
      arbitrage.style.display = 'block';
      arbitrage.style.opacity = 1;
      arbitrageTab.classList.add('selected');
      arbitrageTab.classList.add('active');
      break;
    case 'about':
      var about = document.getElementById('about');
      about.style.display = 'block';
      about.style.opacity = 1;
      aboutTab.classList.add('selected');
      aboutTab.classList.add('active');
      break;
  }
}

async function recoverResolutionHash(lockedDeposits, dispute, resolutionHash) {
  return loadingPromise.then(() => {
    let deposits = (lockedDeposits) ? lockedDeposits : currentParticipant.lockedDeposits;

    let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_0__["contract"])('Escrow').instance;
  
    let deposit;
    let addresses = [ dispute.claimant, dispute.defendant ];
    deposits.forEach((item) => {
      if(addresses.indexOf(item.participant) != -1
        && addresses.indexOf(item.address) != -1) {
          deposit = item;
          return;
      }
    });

    if(!deposit) {
      return null;
    }

    let recovered = null;
    let checkHash = function(address, participant, amount) {
      var hash = web3.sha3(escrow.forceReleaseDeposit.getData(address, participant, amount), { encoding: 'hex'});
      if(resolutionHash == hash) {
        recovered = {
          method: 'Release',
          payee: address,
          payer: participant,
          amount: amount
        }
      }
      var hash = web3.sha3(escrow.revertDeposit.getData(address, participant, amount), { encoding: 'hex'});
      if(resolutionHash == hash) {
        recovered = {
          method: 'Revert',
          payee: address,
          payer: participant,
          amount: amount
        }
      }
    };

    [.25, .5, .75, 1].forEach(x => {
      var ours = deposit.ours * x;
      var their = deposit.their * x;

      if(!recovered) {
        checkHash(deposit.address, deposit.participant, their);
        checkHash(deposit.participant, deposit.address, ours);  
      }
    });
    return recovered;
  });
}

function escrowInit() {
  if (window.ethereum && !loadingPromise) {
    loadingPromise = new Promise(async function (resolve, reject) {
      console.log('loading escrow...');
      if (document.readyState === "complete") { 
        await loadMetamask();
        await loadEscrow();
        console.log(currentParticipant);
        resolve();
      } else {
        window.addEventListener('load', async () => {
          await loadMetamask();
          await loadEscrow();
          console.log(currentParticipant);
          resolve();
        });
      }
    });
    
    loadingPromise.then(() => {
      new Slider('#releaseSlider', {
        formatter: function (value) {
          displayETHSlider('releaseSlider', 'releaseAmount');
        }
      });
      new Slider('#disputeSlider', {
        formatter: function (value) {
          displayETHSlider('disputeSlider', 'disputeAmount');
        }
      });

      var arbitrageTab = document.getElementById('arbitrage-tab');
      var participantTab = document.getElementById('participant-tab');
      var aboutTab = document.getElementById('about-tab');

      participantTab.addEventListener('click', async () => {
        goTo('participant');
      });

      arbitrageTab.addEventListener('click', async () => {
        goTo('arbitrage');
      });

      aboutTab.addEventListener('click', async () => {
        goTo('about');
      });

      var escrowRequestSelect = document.getElementById('escrowRequestSelect');
      escrowRequestSelect.addEventListener('change', escrowRequestSelection);

      console.log('escrow loading finished!');
    });
  }
  return loadingPromise;
}

window.showEscrowForm = showEscrowForm;
window.hideAllEscrowForms = hideAllEscrowForms;
window.actionDeposit = actionDeposit;
window.actionWithdraw = actionWithdraw;
window.actionRelease = actionRelease;
window.actionRaiseEscrowDispute = actionRaiseEscrowDispute;
window.buildDisputeHash = buildDisputeHash;



/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/main.css */ "./css/main.css");
/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_main_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _modules_ethereum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/ethereum */ "./src/modules/ethereum.js");
/* harmony import */ var _escrow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./escrow */ "./src/escrow.js");
/* harmony import */ var _dispute__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dispute */ "./src/dispute.js");






//const ROPSTEN_ESCROW_ADDRESS = '0x78afbee6f1693d16d1b61bA9425b736F19706858';
//const ROPSTEN_ARBITRAGE_ADDRESS = '0xCEe80ff1B8DB005C2DC93bE318c3152462799544';

// https://en.wikipedia.org/wiki/Alice_and_Bob
const PARTICIPANTS = [ 'Alice', 'Bob', 'Charlie', 'Eve', 'Mallory', 'Olivia' ];

let escrowAddress;

function loadAllContracts() {
  var escrowAddress = '0x' + document.getElementById("escrowAddressInput").value;
  return loadAllContractsInternal(escrowAddress);
}

function loadAllContractsInternal(escrowAddress) {
  let escrow = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["loadContract"])('Escrow', escrowAddress);

  new Promise((resolve, reject) => {
    return escrow.instance.owner.call((err, data) => {
      if(data) {
        resolve(data);
      } else {
        console.error(err);
        reject(err);
      }
    });
  }).then((arbitrageAddress) => {
    return Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["loadContract"])('Arbitrage', arbitrageAddress);
  }).then(() => {
    return Promise.all([Object(_escrow__WEBPACK_IMPORTED_MODULE_2__["escrowInit"])(), Object(_dispute__WEBPACK_IMPORTED_MODULE_3__["disputeInit"])()]);
  }).then(() => {
    var contractSelection = document.getElementById("contractSelection");
    contractSelection.style.display = 'none';

    var setup = document.getElementById("setup");
    setup.style.display = 'none';

    var app = document.getElementById("app");
    app.style.display = 'block';
  });
  return false;
}

function welcome() {
  var contractSelection = document.getElementById("contractSelection");
  contractSelection.style.display = 'block';

  var participantsDefinition = document.getElementById("participantsDefinition");
  participantsDefinition.style.display = 'none';

  return false;
}

function setupParticipants() {
  var contractSelection = document.getElementById("contractSelection");
  contractSelection.style.display = 'none';

  var participantsDefinition = document.getElementById("participantsDefinition");
  participantsDefinition.style.display = 'block';

  return false;
}

function createNewContracts() {
  var participantsDefinition = document.getElementById("participantsDefinition");
  participantsDefinition.style.display = 'none';

  var contractSetup = document.getElementById("contractSetup");
  contractSetup.style.display = 'block';

  var steps = [];
  [1, 2, 3, 4].forEach((i) => {
    let step = {
      loading: document.getElementById('loadingStep'+i),
      spinner: document.getElementById('spinnerStep'+i),
      success: document.getElementById('successStep'+i),
    }
    steps.push(step);
    
    step.loading.style.display = '';
    step.spinner.style.display = 'none';
    step.success.style.display = 'none';
  });

  var endSetup = document.getElementById("endSetup");
  endSetup.style.display = 'none';

  var arbiters = [];
  [1, 2, 3].forEach(i => {
    var setupArbiterAddress = document.getElementById('setupArbiterAddress'+i);
    if(setupArbiterAddress.value && setupArbiterAddress.value.length == 40) {
      arbiters.push('0x'+setupArbiterAddress.value);
    }
  });

  steps[0].spinner.style.display = '';

  let escrow, arbitrage;
  Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["newContract"])('Escrow', []).then((contract) => {
    escrow = contract;
    escrowAddress = contract.address;

    steps[0].spinner.style.display = 'none';
    steps[0].success.style.display = '';

    var escrowAddressSetup = document.getElementById("escrowAddressSetup");
    escrowAddressSetup.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["shortenAddress"])(contract.address, true);
  }).then(() => {
    steps[1].spinner.style.display = '';

    return Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["newContract"])('Arbitrage', []);
  }).then((contract) => {
    arbitrage = contract;
    steps[1].spinner.style.display = 'none';
    steps[1].success.style.display = '';

    var arbitrageAddressSetup = document.getElementById("arbitrageAddressSetup");
    arbitrageAddressSetup.innerHTML = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["shortenAddress"])(contract.address, true);
  }).then(() => {
    steps[2].spinner.style.display = '';
    return new Promise((resolve, reject) => {
      escrow.transferOwnership(arbitrage.address, (error, data) => {
        if(data) {
          resolve(data);
        } else {
          console.error(error);
          reject(error);
        }
      });
    }).then((hash) => {
      return Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["waitForReceipt"])(hash).then((data) => {
        console.log('Ownership transferred');
        console.log(data);
        return data;
      });
    });
  }).then(() => {
    steps[2].spinner.style.display = 'none';
    steps[2].success.style.display = '';
  }).then(() => {
    steps[3].spinner.style.display = '';
    return new Promise((resolve, reject) => {
      arbitrage.addArbitrators(arbiters, (error, data) => {
        if(data) {
          resolve(data);
        } else {
          console.error(error);
          reject(error);
        }
      });
    }).then((hash) => {
      return Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["waitForReceipt"])(hash).then((data) => {
        console.log('Arbitrators added');
        console.log(data);
        return data;
      });
    });
  }).then(() => {
    steps[3].spinner.style.display = 'none';
    steps[3].success.style.display = '';
    endSetup.style.display = '';
  });

  return false;
}

function endSetup() {
  var contractSelection = document.getElementById("contractSelection");
  contractSelection.style.display = 'none';

  var setup = document.getElementById("setup");
  setup.style.display = 'none';

  var app = document.getElementById("app");
  app.style.display = 'block';

  if(!escrowAddress) {
    escrowAddress = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["lookupName"])('Escrow');
  }

  return loadAllContractsInternal(escrowAddress);
}

var setup = document.getElementById("setup");
setup.style.display = 'block';

if(!window.ethereum) {
  var metamask = document.getElementById("metamask");
  metamask.style.display = 'block';
} else {
  window.ethereum.on('accountsChanged', function (accounts) {
    // Time to reload your interface with accounts[0]!
    console.log('new accounts: ' + accounts[0]);
    location.reload(false);
  });

  _modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["metamaskLoading"].then(account => {
    var setupOwnerAddress = document.getElementById("setupOwnerAddress");
    setupOwnerAddress.value = account.address.substr(2);
  })

  //var app = document.getElementById("app");
  //app.style.display = 'block';

  let search = window.location.search;
  let escrowAddress = search.replace(/.*contract=0x(\w+)&?/, '0x$1');

  if(!escrowAddress) {
    var escrowAddressInput = document.getElementById("escrowAddressInput");
    escrowAddress = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["lookupName"])('Escrow');
    escrowAddressInput.value = escrowAddress.substr(2);

    PARTICIPANTS.forEach((participant, i) => {
      let index = i+1;
      var setupParticipantName = document.getElementById("setupParticipantName"+index);
      setupParticipantName.value = participant;
    
      var setupParticipantAddress = document.getElementById("setupParticipantAddress"+index);
      let participantAddress = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["lookupName"])(participant);
      if(participantAddress != participant) {
        setupParticipantAddress.value = participantAddress.substr(2);
      } else {
        setupParticipantAddress.placeholder = participant+'\'s address';
      }
    });
  [ 'Arbiter1' ].forEach((arbiter, i) => {
    let index = i+1;
    var setupArbiterName = document.getElementById("setupArbiterName"+index);
    setupArbiterName.value = arbiter;

    var setupArbiterAddress = document.getElementById("setupArbiterAddress"+index);
    let arbiterAddress = Object(_modules_ethereum__WEBPACK_IMPORTED_MODULE_1__["lookupName"])(arbiter);
    if(setupArbiterAddress != arbiter) {
      setupArbiterAddress.value = arbiterAddress.substr(2);
    } else {
      setupArbiterAddress.placeholder = arbiter+'\'s address';
    }
  });
} else {
    loadAllContractsInternal(escrowAddress);
  }
  var contractSelection = document.getElementById("contractSelection");
  contractSelection.style.display = 'block';
}

window.welcome = welcome;
window.loadAllContracts = loadAllContracts;
window.setupParticipants = setupParticipants;
window.createNewContracts = createNewContracts;
window.endSetup = endSetup;


/***/ }),

/***/ "./src/modules/ethereum.js":
/*!*********************************!*\
  !*** ./src/modules/ethereum.js ***!
  \*********************************/
/*! exports provided: loadABI, lookupName, lookupAddress, shortenHash, shortenAddress, loadContract, contract, metamaskLoading, newContract, waitForReceipt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadABI", function() { return loadABI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lookupName", function() { return lookupName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lookupAddress", function() { return lookupAddress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shortenHash", function() { return shortenHash; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shortenAddress", function() { return shortenAddress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadContract", function() { return loadContract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contract", function() { return contract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "metamaskLoading", function() { return metamaskLoading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newContract", function() { return newContract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "waitForReceipt", function() { return waitForReceipt; });
/* harmony import */ var _assets_registry_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../assets/registry.json */ "./assets/registry.json");
var _assets_registry_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../assets/registry.json */ "./assets/registry.json", 1);
/* harmony import */ var _assets_Arbitrage_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../assets/Arbitrage.json */ "./assets/Arbitrage.json");
var _assets_Arbitrage_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../assets/Arbitrage.json */ "./assets/Arbitrage.json", 1);
/* harmony import */ var _assets_Escrow_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../assets/Escrow.json */ "./assets/Escrow.json");
var _assets_Escrow_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../assets/Escrow.json */ "./assets/Escrow.json", 1);
/* harmony import */ var _assets_images_download_metamask_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../assets/images/download-metamask.png */ "./assets/images/download-metamask.png");
/* harmony import */ var _assets_images_download_metamask_png__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_assets_images_download_metamask_png__WEBPACK_IMPORTED_MODULE_3__);






const ROPSTEN_ETHERSCAN_URL= 'http://ropsten.etherscan.io';

let contracts = {};
let currentAccount = {};

function loadABI(name) {
  switch(name) {
    case 'Escrow':
      return _assets_Escrow_json__WEBPACK_IMPORTED_MODULE_2__;
    case 'Arbitrage':
      return _assets_Arbitrage_json__WEBPACK_IMPORTED_MODULE_1__;
    default:
    //  console.error('Invalid ABI');
  }
  return _assets_Escrow_json__WEBPACK_IMPORTED_MODULE_2__;
}
  
function loadJSON(filename) {
  var request = new XMLHttpRequest();
  request.open('GET', '../assets/' + filename, true);
  request.send(null);
  return new Promise((resolve, reject) => {
    request.onreadystatechange = function () {
      if (request.readyState === 4) {
        if (request.status === 200) {
          var type = request.getResponseHeader('Content-Type');
          if (type.indexOf("text") !== 1) {
            resolve(JSON.parse(request.responseText));
            return;
          } else {
            console.error(request);
            reject("Unable to load file '" + filename + "'");
          }
        }
      }
    }
  });
}

function lookupAddress(address) {
  let result = address;
  if(_assets_registry_json__WEBPACK_IMPORTED_MODULE_0__[address]) {
    result = _assets_registry_json__WEBPACK_IMPORTED_MODULE_0__[address];
  };
  return result;
}

function lookupName(name) {
  let result = name;
  Object.keys(_assets_registry_json__WEBPACK_IMPORTED_MODULE_0__).forEach(key => {
    if(_assets_registry_json__WEBPACK_IMPORTED_MODULE_0__[key] == name) {
      result = key;
    }
  });

  return result;
}

function shortenHash(hash) {
  return hash.substring(0, 6) + '...' + hash.substring(hash.length-4, hash.length);
}

function shortenAddress(address, format) {
  let result = address;
  if(address && address.length == 42 && address.startsWith('0x')) {
    if(_assets_registry_json__WEBPACK_IMPORTED_MODULE_0__[address]) {
      result = _assets_registry_json__WEBPACK_IMPORTED_MODULE_0__[address];
    } else {
      result = address.substring(0, 6) + '...' + address.substring(42-4, 42);
    }

    if(format) {
      result = '<a href="'+ROPSTEN_ETHERSCAN_URL+'/address/'+address+'">' + result + '</a>';
    }
  }
  return result;
}

function loadContract(name, address) {
  let contractABI = loadABI(name);
  let contract = web3.eth.contract(contractABI.abi);
  let instance = contract.at(address);
  contracts[name] = {
    address: address,
    contract: contract,
    instance: instance
  };
  return contracts[name];
}

function contract(name) {
  return contracts[name];
}

function newContract(name, parameters) {
  return loadABI(name+'.json').then((contractABI) => {
    console.log(contractABI);
    let contract = web3.eth.contract(contractABI.abi);
    console.log(contract);
    return new Promise((resolve, reject) => {
       contract.new(parameters, { data: contractABI.bytecode }, (error, data) => {
        if(data) {
          console.log(name+' creation...');
          console.log(data);
          if(data.address) {
            resolve(data);
          }
        } else {
          console.error(error);
          reject(error);
        }
      });
    });
  });
}

function waitForReceipt(hash) {
  return new Promise(function(resolve, reject) {
    let interval = 1000;
    let timeout = 100000;
    let timer = window.setInterval(() => {
      console.log('checking for tx '+hash);
      web3.eth.getTransactionReceipt(hash, function (error, receipt) {
        console.log('Receipt ' + receipt);
        if (error) {
          console.error(error);
          reject(error);
        }
        if (receipt !== null) {
          console.log('tx mined !');
          // Transaction went through
          window.clearInterval(timer);
          resolve(receipt);
        } else {
          timeout -= interval;
          if(timeout <= 0) {
            console.log('Timeout reached!');
            // timeout
            window.clearInterval(timer);
            reject(hash);
          }
        }
      });
    }, interval);
  });
}

let metamaskLoading = new Promise((resolve, reject) => {
    // Modern dapp browsers...
    if (window.ethereum) {
      window.web3 = new Web3(window.ethereum);
      web3.eth.getAccounts((error, accounts) => {
        if (accounts && accounts.length > 0) {
          currentAccount.address = accounts[0];
          web3.eth.getBalance(accounts[0], (error, data) => {
            if (data) {
              currentAccount.balance = data;
              resolve(currentAccount);
            } else {
              console.error(error);
              reject(error);
            }
          });
        } else {
          console.info("Metamask is not yet enabled!");
          ethereum.enable().then((err, data) => {
            if(data) {
              console.log(data);
              resolve(data);
            } else {
              console.error(err);
              reject(data);
            }
          })
        }
      });
    }
    else {
      console.error('You need to install MetaMask!');
      reject();
    }
});




/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,